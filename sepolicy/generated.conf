#start of file:./base_policy/security_classes

# FLASK

#
# Define the security object classes 
#

# Classes marked as userspace are classes
# for userspace object managers

class security
class process
class system
class capability

# file-related classes
class filesystem
class file
class dir
class fd
class lnk_file
class chr_file
class blk_file
class sock_file
class fifo_file

# network-related classes
class socket
class tcp_socket
class udp_socket
class rawip_socket
class node
class netif
class netlink_socket
class packet_socket
class key_socket
class unix_stream_socket
class unix_dgram_socket

# sysv-ipc-related classes
class sem
class msg
class msgq
class shm
class ipc

#
# userspace object manager classes
#

# passwd/chfn/chsh
class passwd			# userspace

# SE-X Windows stuff
class drawable			# userspace
class window			# userspace
class gc			# userspace
class font			# userspace
class colormap			# userspace
class property			# userspace
class cursor			# userspace
class xclient			# userspace
class xinput			# userspace
class xserver			# userspace
class xextension		# userspace

# pax flags; deprecated--can be reclaimed
class pax			# userspace

# extended netlink sockets
class netlink_route_socket
class netlink_firewall_socket
class netlink_tcpdiag_socket
class netlink_nflog_socket
class netlink_xfrm_socket
class netlink_selinux_socket
class netlink_audit_socket
class netlink_ip6fw_socket
class netlink_dnrt_socket

class dbus			# userspace
class nscd			# userspace

# IPSec association
class association

# Updated Netlink class for KOBJECT_UEVENT family.
class netlink_kobject_uevent_socket

class appletalk_socket

class packet

# Kernel access key retention
class key

class context			# userspace

class dccp_socket

# FLASK
#end of file:./base_policy/security_classes

#start of file:./base_policy/initial_sids

# SELinux Policy Editor, a simple editor for SELinux policies
# This section of the code is from the NSA SELinux release.
# Copyright (C) 2001, 2003 National Security Agency

# These files are from the NSA SELinux code.  More verbose comments might
# be a useful addition to describe their exact relationship with SELinux
# Policy Editor.

# FLASK

#
# Define initial security identifiers 
#

sid kernel
sid security
sid unlabeled
sid fs
sid file
sid file_labels
sid init
sid any_socket
sid port
sid netif
sid netmsg
sid node
sid igmp_packet
sid icmp_socket
sid tcp_socket
sid sysctl_modprobe
sid sysctl
sid sysctl_fs
sid sysctl_kernel
sid sysctl_net
sid sysctl_net_unix
sid sysctl_vm
sid sysctl_dev
sid kmod
sid policy
sid scmp_packet
sid devnull

# FLASK
#end of file:./base_policy/initial_sids

#start of file:./base_policy/access_vectors

#
# Define common prefixes for access vectors
#
# common common_name { permission_name ... }


#
# Define a common prefix for file access vectors.
#

common file
{
	ioctl
	read
	write
	create
	getattr
	setattr
	lock
	relabelfrom
	relabelto
	append
	unlink
	link
	rename
	execute
	swapon
	quotaon
	mounton
}


#
# Define a common prefix for socket access vectors.
#

common socket
{
# inherited from file
	ioctl
	read
	write
	create
	getattr
	setattr
	lock
	relabelfrom
	relabelto
	append
# socket-specific
	bind
	connect
	listen
	accept
	getopt
	setopt
	shutdown
	recvfrom
	sendto
	recv_msg
	send_msg
	name_bind
}	

#
# Define a common prefix for ipc access vectors.
#

common ipc
{
	create
	destroy
	getattr
	setattr
	read
	write
	associate
	unix_read
	unix_write
}

#
# Define the access vectors.
#
# class class_name [ inherits common_name ] { permission_name ... }


#
# Define the access vector interpretation for file-related objects.
#

class filesystem
{
	mount
	remount
	unmount
	getattr
	relabelfrom
	relabelto
	transition
	associate
	quotamod
	quotaget
}

class dir
inherits file
{
	add_name
	remove_name
	reparent
	search
	rmdir
}

class file
inherits file
{
	execute_no_trans
	entrypoint
	execmod
}

class lnk_file
inherits file

class chr_file
inherits file
{
	execute_no_trans
	entrypoint
	execmod
}

class blk_file
inherits file

class sock_file
inherits file

class fifo_file
inherits file

class fd
{
	use
}


#
# Define the access vector interpretation for network-related objects.
#

class socket
inherits socket

class tcp_socket
inherits socket
{
	connectto
	newconn
	acceptfrom
	node_bind
	name_connect
}

class udp_socket
inherits socket
{
	node_bind
}

class rawip_socket
inherits socket
{
	node_bind
}

class node 
{
	tcp_recv
	tcp_send
	udp_recv
	udp_send
	rawip_recv
	rawip_send
	enforce_dest
	dccp_recv
	dccp_send
}

class netif
{
	tcp_recv
	tcp_send
	udp_recv
	udp_send
	rawip_recv
	rawip_send
	dccp_recv
	dccp_send
}

class netlink_socket
inherits socket

class packet_socket
inherits socket

class key_socket
inherits socket

class unix_stream_socket
inherits socket
{
	connectto
	newconn
	acceptfrom
}

class unix_dgram_socket
inherits socket


#
# Define the access vector interpretation for process-related objects
#

class process
{
	fork
	transition
	sigchld # commonly granted from child to parent
	sigkill # cannot be caught or ignored
	sigstop # cannot be caught or ignored
	signull # for kill(pid, 0)
	signal  # all other signals
	ptrace
	getsched
	setsched
	getsession
	getpgid
	setpgid
	getcap
	setcap
	share
	getattr
	setexec
	setfscreate
	noatsecure
	siginh
	setrlimit
	rlimitinh
	dyntransition
	setcurrent
	execmem
	execstack
	execheap
	setkeycreate
	setsockcreate
}


#
# Define the access vector interpretation for ipc-related objects
#

class ipc
inherits ipc

class sem
inherits ipc

class msgq
inherits ipc
{
	enqueue
}

class msg
{
	send
	receive
}

class shm
inherits ipc
{
	lock
}


#
# Define the access vector interpretation for the security server. 
#

class security
{
	compute_av
	compute_create
	compute_member
	check_context
	load_policy
	compute_relabel
	compute_user
	setenforce     # was avc_toggle in system class
	setbool
	setsecparam
	setcheckreqprot
}


#
# Define the access vector interpretation for system operations.
#

class system
{
	ipc_info
	syslog_read  
	syslog_mod
	syslog_console
}

#
# Define the access vector interpretation for controling capabilies
#

class capability
{
	# The capabilities are defined in include/linux/capability.h
	# Care should be taken to ensure that these are consistent with
	# those definitions. (Order matters)

	chown           
	dac_override    
	dac_read_search 
	fowner          
	fsetid          
	kill            
	setgid           
	setuid           
	setpcap          
	linux_immutable  
	net_bind_service 
	net_broadcast    
	net_admin        
	net_raw          
	ipc_lock         
	ipc_owner        
	sys_module       
	sys_rawio        
	sys_chroot       
	sys_ptrace       
	sys_pacct        
	sys_admin        
	sys_boot         
	sys_nice         
	sys_resource     
	sys_time         
	sys_tty_config  
	mknod
	lease
	audit_write
	audit_control
}


#
# Define the access vector interpretation for controlling
# changes to passwd information.
#
class passwd
{
	passwd	# change another user passwd
	chfn	# change another user finger info
	chsh	# change another user shell
	rootok  # pam_rootok check (skip auth)
	crontab # crontab on another user
}

#
# SE-X Windows stuff
#
class drawable
{
	create
	destroy
	draw
	copy
	getattr
}

class gc
{
	create
	free
	getattr
	setattr
}

class window 
{
	addchild
	create
	destroy
	map
	unmap
	chstack
	chproplist
	chprop	
	listprop
	getattr
	setattr
	setfocus
	move
	chselection
	chparent
	ctrllife
	enumerate
	transparent
	mousemotion
	clientcomevent
	inputevent
	drawevent
	windowchangeevent
	windowchangerequest
	serverchangeevent
	extensionevent
}

class font
{
	load
	free
	getattr
	use
}

class colormap
{
	create
	free
	install
	uninstall
	list
	read
	store
	getattr
	setattr
}

class property
{
	create
	free
	read
	write
}

class cursor
{
	create
	createglyph
	free
	assign
	setattr
}

class xclient
{
	kill
}

class xinput
{
	lookup
	getattr
	setattr
	setfocus
	warppointer
	activegrab
	passivegrab
	ungrab
	bell
	mousemotion
	relabelinput
}

class xserver
{
	screensaver
	gethostlist
	sethostlist
	getfontpath
	setfontpath
	getattr
	grab
	ungrab
}

class xextension
{
	query
	use
}

#
# Define the access vector interpretation for controlling
# PaX flags
#
class pax
{
	pageexec	# Paging based non-executable pages
	emutramp	# Emulate trampolines
	mprotect	# Restrict mprotect()
	randmmap	# Randomize mmap() base
	randexec	# Randomize ET_EXEC base
	segmexec	# Segmentation based non-executable pages
}

#
# Extended Netlink classes
#
class netlink_route_socket
inherits socket
{
	nlmsg_read
	nlmsg_write
}

class netlink_firewall_socket
inherits socket
{
	nlmsg_read
	nlmsg_write
}

class netlink_tcpdiag_socket
inherits socket
{
	nlmsg_read
	nlmsg_write
}

class netlink_nflog_socket
inherits socket

class netlink_xfrm_socket
inherits socket
{
	nlmsg_read
	nlmsg_write
}

class netlink_selinux_socket
inherits socket

class netlink_audit_socket
inherits socket
{
	nlmsg_read
	nlmsg_write
	nlmsg_relay
	nlmsg_readpriv
}

class netlink_ip6fw_socket
inherits socket
{
	nlmsg_read
	nlmsg_write
}

class netlink_dnrt_socket
inherits socket

# Define the access vector interpretation for controlling
# access and communication through the D-BUS messaging
# system.
#
class dbus
{
	acquire_svc
	send_msg
}

# Define the access vector interpretation for controlling
# access through the name service cache daemon (nscd).
#
class nscd
{
	getpwd
	getgrp
	gethost
	getstat
	admin
	shmempwd
	shmemgrp
	shmemhost
}

# Define the access vector interpretation for controlling
# access to IPSec network data by association
#
class association
{
	sendto
	recvfrom
	setcontext
	polmatch
}

# Updated Netlink class for KOBJECT_UEVENT family.
class netlink_kobject_uevent_socket
inherits socket

class appletalk_socket
inherits socket

class packet
{
	send
	recv
	relabelto
}

class key
{
	view
	read
	write
	search
	link
	setattr
	create
}

class context
{
	translate
	contains
}

class dccp_socket
inherits socket
{
	node_bind
	name_connect
}
#end of file:./base_policy/access_vectors

#start of file:./base_policy/mcs

ifdef(`enable_mcs',`
#
# Define sensitivities 
#
# Each sensitivity has a name and zero or more aliases.
#
# MCS is single-sensitivity.
#
sensitivity s0;

#
# Define the ordering of the sensitivity levels (least to greatest)
#
dominance { s0 }




#
# Define the categories
#
# Each category has a name and zero or more aliases.
#
gen_cats(1024)


#
# Each MCS level specifies a sensitivity and zero or more categories which may
# be associated with that sensitivity.
#
level s0:c0.c1023;

#
# Define the MCS policy
#
# mlsconstrain class_set perm_set expression ;
#
# mlsvalidatetrans class_set expression ;
#
# expression : ( expression )
#	     | not expression
#	     | expression and expression
#	     | expression or expression
#	     | u1 op u2
#	     | r1 role_mls_op r2
#	     | t1 op t2
#	     | l1 role_mls_op l2
#	     | l1 role_mls_op h2
#	     | h1 role_mls_op l2
#	     | h1 role_mls_op h2
#	     | l1 role_mls_op h1
#	     | l2 role_mls_op h2
#	     | u1 op names
#	     | u2 op names
#	     | r1 op names
#	     | r2 op names
#	     | t1 op names
#	     | t2 op names
#	     | u3 op names (NOTE: this is only available for mlsvalidatetrans)
#	     | r3 op names (NOTE: this is only available for mlsvalidatetrans)
#	     | t3 op names (NOTE: this is only available for mlsvalidatetrans)
#
# op : == | !=
# role_mls_op : == | != | eq | dom | domby | incomp
#
# names : name | { name_list }
# name_list : name | name_list name
#

#
# MCS policy for the file classes
#
# Constrain file access so that the high range of the process dominates
# the high range of the file.  We use the high range of the process so
# that processes can always simply run at s0.
#
# Note that getattr on files is always permitted.
#
mlsconstrain file { write setattr append unlink link rename ioctl lock execute relabelfrom }
	( h1 dom h2 );

# New filesystem object labels must be dominated by the relabeling subject
# clearance, also the objects are single-level.
mlsconstrain file { create relabelto }
	(( h1 dom h2 ) and ( l2 eq h2 ));

# At this time we do not restrict "ps" type operations via MCS.  This
# will probably change in future.
mlsconstrain file { read }
	(( h1 dom h2 ) or ( t2 == domain ) or ( t1 == mlsfileread ));

# new file labels must be dominated by the relabeling subject clearance
mlsconstrain { dir lnk_file chr_file blk_file sock_file fifo_file } { relabelfrom }
	( h1 dom h2 );

mlsconstrain { dir lnk_file chr_file blk_file sock_file fifo_file } { create relabelto }
	(( h1 dom h2 ) and ( l2 eq h2 ));

') dnl end enable_mcs
#end of file:./base_policy/mcs

#start of file:./base_policy/attribute.te

# SELinux Policy Editor, a simple editor for SELinux policies
# Copyright (C) 2006 Yuichi Nakamura

###declare attributes
attribute domain;
#to mark domain where "allowpriv -all" described
attribute unconfined_domain;
attribute file_type;
attribute fs_type;
attribute netif_type;
attribute netmsg_type;
attribute node_type;
attribute ttyfile;
attribute port_type;
attribute unpriv_port_type;
attribute ptyfile;

####
#attribute related to MCS
attribute mcskillall;
attribute mcsptraceall;
attribute mcssetcats;
attribute mlsfileread;
attribute mlsfilereadtoclr;
attribute mlsfilewrite;
attribute mlsfilewritetoclr;
attribute mlsfileupgrade;
attribute mlsfiledowngrade;
attribute mlsnetread;
attribute mlsnetreadtoclr;
attribute mlsnetwrite;
attribute mlsnetwritetoclr;
attribute mlsnetupgrade;
attribute mlsnetdowngrade;
attribute mlsnetrecvall;
attribute mlsipcread;
attribute mlsipcreadtoclr;
attribute mlsipcwrite;
attribute mlsipcwritetoclr;
attribute mlsprocread;
attribute mlsprocreadtoclr;
attribute mlsprocwrite;
attribute mlsprocwritetoclr;
attribute mlsprocsetsl;
attribute mlsxwinread;
attribute mlsxwinreadtoclr;
attribute mlsxwinwrite;
attribute mlsxwinwritetoclr;
attribute mlsxwinreadproperty;
attribute mlsxwinwriteproperty;
attribute mlsxwinreadcolormap;
attribute mlsxwinwritecolormap;
attribute mlsxwinwritexinput;
attribute mlstrustedobject;
attribute privrangetrans;
attribute mlsrangetrans;
#end of file:./base_policy/attribute.te

# SELinux Policy Editor, a simple editor for SELinux policies
# Copyright (C) 2006 Yuichi Nakamura

## minimum types used in converter
type security_t,file_type,fs_type;
#unlabeled_t is for unlabeled object
type unlabeled_t,file_type,fs_type,domain;
#in some condition, unlabeled files are labeled as file_t
type file_t, file_type,fs_type;
type fs_t,fs_type;
type default_t,file_type,fs_type;
type port_t,port_type;
type netif_t,netif_type;
type node_t,node_type;

#labels for terminals
type tty_device_t,file_type,fs_type;
type devtty_t,fs_type, file_type;
type devpts_t,fs_type, file_type;
type ptmx_t,file_type, fs_type;
type vcs_device_t,file_type;

#dummy label
type dummy_label_t;

#labels for unsupported file system
#To see what is unsupported, see genfs_contexts
type unsupported_fs_t,fs_type,file_type;

##Labels for Well-Known ports
type wellknown_tcp_port_t,port_type;
type wellknown_udp_port_t,port_type;
##labels for unreserved 1024 over ports
type unpriv_tcp_port_t,port_type;
type unpriv_udp_port_t,port_type;
typeattribute unpriv_tcp_port_t unpriv_port_type;
typeattribute unpriv_udp_port_t unpriv_port_type;
##type for supported file systems
type tmpfs_t,file_type,fs_type;
type sysfs_t,file_type,fs_type;
type autofs_t,file_type,fs_type;
type usbfs_t,file_type,fs_type;
type cdfs_t,file_type,fs_type;
type romfs_t,file_type,fs_type;
type ramfs_t,file_type,fs_type;
type dosfs_t,file_type,fs_type;
type smbfs_t,file_type,fs_type;
type nfs_t,file_type,fs_type;
type proc_t,file_type,fs_type;
type proc_kmsg_t,file_type,fs_type;
type proc_kcore_t,file_type,fs_type;
type proc_pid_self_t,file_type,fs_type;
type proc_pid_other_t,file_type,fs_type;
type xattrfs_t,file_type,fs_type;
type hugetlbfs_t,file_type,fs_type;
type inotifyfs_t,file_type,fs_type;
##end of type for supported file systems
## type for Network Interface Card
type lo_t,netif_type;
type eth0_t,netif_type;
type eth1_t,netif_type;
type eth2_t,netif_type;
## endof type for Network Interface Card
##Following are allowed in simplifed policy by default
#start of file:./base_policy/default.te

# SELinux Policy Editor, a simple editor for SELinux policies
# Copyright (C) 2006 Yuichi Nakamura

#####Following are allowed in simplifed policy by default

# domain can do everything to unsupported file systems
# To see what is unsupported, see genfs_contexts
allow_file_r(domain, unsupported_fs_t)
allow_file_s(domain, unsupported_fs_t)
allow_file_w(domain, unsupported_fs_t)
allow_file_x(domain, unsupported_fs_t)

# dummy boolean value, not used 
bool dummy_boolean false;

#watch load_policy and setenforce
auditallow domain security_t:security { load_policy setenforce };
auditallow domain self:capability sys_chroot;

#end of file:./base_policy/default.te

#start of file:./base_policy/unsupported.te

##Unsupported permission
#Dead Permission
#allow domain file_type:{ blk_file chr_file dir fifo_file file lnk_file sock_file } swapon;
#allow domain domain:all_socket_class { relabelfrom relabelto };
#allow domain domain:unix_stream_socket { acceptfrom newconn };
#allow domain domain:netlink_firewall_socket nlmsg_read;
#allow domain domain:netlink_ip6fw_socket { accept append bind connect create getattr getopt ioctl listen lock name_bind nlmsg_read nlmsg_write read recv_msg recvfrom relabelfrom relabelto send_msg sendto setattr setopt shutdown write };
#allow domain self:netlink_tcpdiag_socket nlmsg_write;
#allow domain domain:ipc { associate create destroy getattr read setattr unix_read unix_write write };
#Unsupported features in SPDL
allow domain security_t:security { compute_member setcheckreqprot };
#Unsupported because related to DAC and POSIX capabilities  
allow domain domain:process { getcap setcap };
#Unsupported because low effect to security
allow domain { file_type domain }:{ blk_file chr_file dir fifo_file file lnk_file sock_file } getattr;
allow domain domain:process { fork getpgid getsched getsession noatsecure rlimitinh setpgid share siginh };
allow domain domain:system ipc_info;
allow domain self:capability lease;
allow file_type fs_type:filesystem associate;
allow domain fs_type:filesystem { getattr quotaget };
# Unsupported because of complete overlap 
allow domain self:capability { audit_write ipc_owner kill net_bind_service sys_ptrace };
allow domain { file_type domain }:dir { add_name remove_name };
# Unsupported because of Partly overlap
allow domain domain:process { setrlimit setsched };
allow domain self:capability audit_control;
#Implicit overlap
allow domain domain:fd use;
allow domain domain:process setexec;
allow domain self:tcp_socket { accept append bind connect create getattr getopt ioctl listen lock read setattr setopt shutdown write };
allow domain self:udp_socket { accept append bind connect create getattr getopt ioctl listen lock read setattr setopt shutdown write };
allow domain domain:unix_dgram_socket { create getattr getopt ioctl lock relabelfrom relabelto setattr setopt shutdown };
allow domain domain:unix_stream_socket { create getattr getopt ioctl lock relabelfrom relabelto setattr setopt shutdown };
#Pending.. May be changed
allow domain unlabeled_t:packet { recv send };
allow domain self:packet_socket { accept append bind connect create getattr getopt ioctl listen lock name_bind read recv_msg recvfrom relabelfrom relabelto send_msg sendto setattr setopt shutdown write };
allow domain self:key_socket { accept append bind connect create getattr getopt ioctl listen lock name_bind read recv_msg recvfrom relabelfrom relabelto send_msg sendto setattr setopt shutdown write };
allow domain self:dccp_socket { accept append bind connect create getattr getopt ioctl listen lock name_bind name_connect node_bind read recv_msg recvfrom relabelfrom relabelto send_msg sendto setattr setopt shutdown write };
#Does not support user space AVC
allow domain self:passwd { chfn chsh crontab passwd rootok };
allow domain domain:dbus { acquire_svc send_msg };
allow domain domain:nscd { admin getgrp gethost getpwd getstat shmemgrp shmemhost shmempwd };
allow domain unlabeled_t:association *;
allow domain self:context contains;
allow domain domain:context translate;
##End of unsupported permissions
#end of file:./base_policy/unsupported.te

type rootdir_t,file_type;
#/
type homedir_rootdir_t,file_type;
#~/
type lib_t,file_type;
#/lib
type bin_t,file_type;
#/bin
type etc_t,file_type;
#/etc
type dev_t,file_type;
#/dev
type var_t,file_type;
#/var
type tmp_t,file_type;
#/tmp
type usr_t,file_type;
#/usr
type home_t,file_type;
#/home
type sbin_t,file_type;
#/sbin
type dev_mem_t,file_type;
#/dev/mem
type var_log_t,file_type;
#/var/log
type usr_lib_t,file_type;
#/usr/lib
type var_tmp_t,file_type;
#/var/tmp
type var_run_t,file_type;
#/var/run
type etc_rcdd_t,file_type;
#/etc/rc.d
type dev_kmem_t,file_type;
#/dev/kmem
type null_device_t,file_type;
#/dev/null
type dev_zero_t,file_type;
#/dev/zero
type dev_port_t,file_type;
#/dev/port
type bin_login_t,file_type;
#/bin/login
type dev_log_t,file_type;
#dev_log_t
type sbin_init_t,file_type;
#/sbin/init
type etc_group_t,file_type;
#/etc/group
type usr_share_t,file_type;
#/usr/share
type etc_hosts_t,file_type;
#/etc/hosts
type system_cron_spool_t,file_type;
#/etc/cron.d
type etc_initdd_t,file_type;
#/etc/init.d
type etc_rcdd_rc_t,file_type;
#/etc/rc.d/rc
type dev_random_t,file_type;
#/dev/random
type etc_shadow_t,file_type;
#/etc/shadow
type etc_passwd_t,file_type;
#/etc/passwd
type etc_shadowm_t,file_type;
#/etc/shadow-
type dev_console_t,file_type;
#/dev/console
type dev_urandom_t,file_type;
#/dev/urandom
type etc_selinux_t,file_type;
#/etc/selinux
type var_run_nscd_t,file_type;
#/var/run/nscd
type etc_services_t,file_type;
#/etc/services
type initrc_tmp_t,file_type;
#initrc_tmp_t
type sbin_syslogd_t,file_type;
#/sbin/syslogd
type etc_hostdconf_t,file_type;
#/etc/host.conf
type sbin_ldconfig_t,file_type;
#/sbin/ldconfig
type etc_localtime_t,file_type;
#/etc/localtime
type sbin_minilogd_t,file_type;
#/sbin/minilogd
type childdir__t,file_type;
#label for child dirs
type etc_runtime_t,file_type;
#etc_runtime_t
type etc_rcdd_initdd_t,file_type;
#/etc/rc.d/init.d
type etc_protocols_t,file_type;
#/etc/protocols
type syslogd_tmp_t,file_type;
#syslogd_tmp_t
type etc_hostsddeny_t,file_type;
#/etc/hosts.deny
type initrc_tmpfs_t,file_type;
#initrc_tmpfs_t
type etc_resolvdconf_t,file_type;
#/etc/resolv.conf
type etc_syslogdconf_t,file_type;
#/etc/syslog.conf
type etc_hostsdallow_t,file_type;
#/etc/hosts.allow
type etc_rcdd_rcdlocal_t,file_type;
#/etc/rc.d/rc.local
type etc_environment_t,file_type;
#/etc/environment
type syslogd_tmpfs_t,file_type;
#syslogd_tmpfs_t
type usr_share_locale_t,file_type;
#/usr/share/locale
type ldconfig_cache_t,file_type;
#ldconfig_cache_t
type unconfined_tmp_t,file_type;
#unconfined_tmp_t
type initrc_var_tmp_t,file_type;
#initrc_var_tmp_t
type initrc_var_run_t,file_type;
#initrc_var_run_t
type etc_nsswitchdconf_t,file_type;
#/etc/nsswitch.conf
type syslogd_var_tmp_t,file_type;
#syslogd_var_tmp_t
type syslogd_var_run_t,file_type;
#syslogd_var_run_t
type etc_rcdd_rcdsysinit_t,file_type;
#/etc/rc.d/rc.sysinit
type etc_selinux_config_t,file_type;
#/etc/selinux/config
type usr_share_zoneinfo_t,file_type;
#/usr/share/zoneinfo
type unconfined_tmpfs_t,file_type;
#unconfined_tmpfs_t
type unconfined_var_tmp_t,file_type;
#unconfined_var_tmp_t
type unconfined_var_run_t,file_type;
#unconfined_var_run_t
type var_log__childdir__t,file_type;
#label for child dirs
type dir_rootdir_t,file_type;
#/
type dir_homedir_rootdir_t,file_type;
#~/
type dir_lib_t,file_type;
#/lib
type dir_bin_t,file_type;
#/bin
type dir_etc_t,file_type;
#/etc
type dir_dev_t,file_type;
#/dev
type dir_var_t,file_type;
#/var
type dir_usr_t,file_type;
#/usr
type dir_home_t,file_type;
#/home
type dir_sbin_t,file_type;
#/sbin
type dir_var_log_t,file_type;
#/var/log
type dir_usr_lib_t,file_type;
#/usr/lib
type dir_var_run_t,file_type;
#/var/run
type dir_etc_rcdd_t,file_type;
#/etc/rc.d
type dir_usr_share_t,file_type;
#/usr/share
type dir_etc_selinux_t,file_type;
#/etc/selinux
type dir_var_run_nscd_t,file_type;
#/var/run/nscd
type dir_childdir__t,file_type;
#label for child dirs
type dir_usr_share_locale_t,file_type;
#/usr/share/locale
type dir_usr_share_zoneinfo_t,file_type;
#/usr/share/zoneinfo
type dir_var_log__childdir__t,file_type;
#label for child dirs
type udp53_port_t ,port_type;
###Begin of node type declare
###End of node type declare
###########################
############## unconfined_ldconfig_t domain
type unconfined_ldconfig_t,domain,unconfined_domain;
allow unconfined_ldconfig_t self:process transition;
role system_r;
role system_r types unconfined_ldconfig_t;

#rootdir_t:/:---s-----
allow_file_s(unconfined_ldconfig_t,rootdir_t)

#dir_rootdir_t:/:---s-----
allow_file_s(unconfined_ldconfig_t,dir_rootdir_t)

#dev_console_t:/dev/console:rw-s-----
allow_file_r(unconfined_ldconfig_t,dev_console_t)
allow_file_dev_r(unconfined_ldconfig_t,dev_console_t)
allow_file_w(unconfined_ldconfig_t,dev_console_t)
allow_file_dev_w(unconfined_ldconfig_t,dev_console_t)
allow_file_s(unconfined_ldconfig_t,dev_console_t)
allow_file_dev_s(unconfined_ldconfig_t,dev_console_t)

#null_device_t:/dev/null:rw-s-----
allow_file_r(unconfined_ldconfig_t,null_device_t)
allow_file_dev_r(unconfined_ldconfig_t,null_device_t)
allow_file_w(unconfined_ldconfig_t,null_device_t)
allow_file_dev_w(unconfined_ldconfig_t,null_device_t)
allow_file_s(unconfined_ldconfig_t,null_device_t)
allow_file_dev_s(unconfined_ldconfig_t,null_device_t)

#dev_zero_t:/dev/zero:rw-s-----
allow_file_r(unconfined_ldconfig_t,dev_zero_t)
allow_file_dev_r(unconfined_ldconfig_t,dev_zero_t)
allow_file_w(unconfined_ldconfig_t,dev_zero_t)
allow_file_dev_w(unconfined_ldconfig_t,dev_zero_t)
allow_file_s(unconfined_ldconfig_t,dev_zero_t)
allow_file_dev_s(unconfined_ldconfig_t,dev_zero_t)

#dev_random_t:/dev/random:rw-s-----
allow_file_r(unconfined_ldconfig_t,dev_random_t)
allow_file_dev_r(unconfined_ldconfig_t,dev_random_t)
allow_file_w(unconfined_ldconfig_t,dev_random_t)
allow_file_dev_w(unconfined_ldconfig_t,dev_random_t)
allow_file_s(unconfined_ldconfig_t,dev_random_t)
allow_file_dev_s(unconfined_ldconfig_t,dev_random_t)

#dev_urandom_t:/dev/urandom:r-xs-----
allow_file_r(unconfined_ldconfig_t,dev_urandom_t)
allow_file_dev_r(unconfined_ldconfig_t,dev_urandom_t)
allow_file_x(unconfined_ldconfig_t,dev_urandom_t)
allow_file_dev_x(unconfined_ldconfig_t,dev_urandom_t)
allow_file_s(unconfined_ldconfig_t,dev_urandom_t)
allow_file_dev_s(unconfined_ldconfig_t,dev_urandom_t)

#bin_t:/bin:---s-----
allow_file_s(unconfined_ldconfig_t,bin_t)

#dir_bin_t:/bin:---s-----
allow_file_s(unconfined_ldconfig_t,dir_bin_t)

#usr_t:/usr:---s-----
allow_file_s(unconfined_ldconfig_t,usr_t)

#dir_usr_t:/usr:---s-----
allow_file_s(unconfined_ldconfig_t,dir_usr_t)

#sbin_t:/sbin:---s-----
allow_file_s(unconfined_ldconfig_t,sbin_t)

#dir_sbin_t:/sbin:---s-----
allow_file_s(unconfined_ldconfig_t,dir_sbin_t)

#usr_lib_t:/usr/lib:r-xs-----
allow_file_r(unconfined_ldconfig_t,usr_lib_t)
allow_file_x(unconfined_ldconfig_t,usr_lib_t)
allow_file_s(unconfined_ldconfig_t,usr_lib_t)

#dir_usr_lib_t:/usr/lib:r-xs-----
allow_file_r(unconfined_ldconfig_t,dir_usr_lib_t)
allow_file_x(unconfined_ldconfig_t,dir_usr_lib_t)
allow_file_s(unconfined_ldconfig_t,dir_usr_lib_t)

#lib_t:/lib:r-xs-----
allow_file_r(unconfined_ldconfig_t,lib_t)
allow_file_x(unconfined_ldconfig_t,lib_t)
allow_file_s(unconfined_ldconfig_t,lib_t)

#dir_lib_t:/lib:r-xs-----
allow_file_r(unconfined_ldconfig_t,dir_lib_t)
allow_file_x(unconfined_ldconfig_t,dir_lib_t)
allow_file_s(unconfined_ldconfig_t,dir_lib_t)
#Can access allow|allowfs exclusive label(ldconfig_cache_t)

#ldconfig_cache_t:ldconfig_cache_t:rw-s-----
allow_file_r(unconfined_ldconfig_t,ldconfig_cache_t)
allow_file_w(unconfined_ldconfig_t,ldconfig_cache_t)
allow_file_s(unconfined_ldconfig_t,ldconfig_cache_t)

#usr_share_locale_t:/usr/share/locale:r--s-----
allow_file_r(unconfined_ldconfig_t,usr_share_locale_t)
allow_file_s(unconfined_ldconfig_t,usr_share_locale_t)

#dir_usr_share_locale_t:/usr/share/locale:r--s-----
allow_file_r(unconfined_ldconfig_t,dir_usr_share_locale_t)
allow_file_s(unconfined_ldconfig_t,dir_usr_share_locale_t)

#sbin_syslogd_t:/sbin/syslogd:---s-----
allow_file_s(unconfined_ldconfig_t,sbin_syslogd_t)

#sbin_ldconfig_t:/sbin/ldconfig:---s-----
allow_file_s(unconfined_ldconfig_t,sbin_ldconfig_t)

#sbin_minilogd_t:/sbin/minilogd:---s-----
allow_file_s(unconfined_ldconfig_t,sbin_minilogd_t)

#usr_share_zoneinfo_t:/usr/share/zoneinfo:---s-----
allow_file_s(unconfined_ldconfig_t,usr_share_zoneinfo_t)

#bin_login_t:/bin/login:---s-----
allow_file_s(unconfined_ldconfig_t,bin_login_t)

#sbin_init_t:/sbin/init:---s-----
allow_file_s(unconfined_ldconfig_t,sbin_init_t)

#usr_share_t:/usr/share:---s-----
allow_file_s(unconfined_ldconfig_t,usr_share_t)

#dir_usr_share_zoneinfo_t:/usr/share/zoneinfo:---s-----
allow_file_s(unconfined_ldconfig_t,dir_usr_share_zoneinfo_t)

#dir_usr_share_t:/usr/share:---s-----
allow_file_s(unconfined_ldconfig_t,dir_usr_share_t)

####file_type_auto_trans rule
file_type_auto_trans(unconfined_ldconfig_t,dir_etc_t,ldconfig_cache_t)
####
##Begin of implicit dir:search
allow unconfined_ldconfig_t dir_rootdir_t:dir search;
allow unconfined_ldconfig_t dir_dev_t:dir search;
allow unconfined_ldconfig_t dir_usr_t:dir search;
allow unconfined_ldconfig_t dir_usr_share_t:dir search;
##End of implicit dir:search
allow_network_netif_tcp_send(unconfined_ldconfig_t,netif_type)
allow_network_netif_tcp_recv(unconfined_ldconfig_t,netif_type)
allow_network_netif_udp_send(unconfined_ldconfig_t,netif_type)
allow_network_netif_udp_recv(unconfined_ldconfig_t,netif_type)
allow_network_netif_rawip_send(unconfined_ldconfig_t,netif_type)
allow_network_netif_rawip_recv(unconfined_ldconfig_t,netif_type)
allow_network_node_tcp_send(unconfined_ldconfig_t,node_type)
allow_network_node_tcp_recv(unconfined_ldconfig_t,node_type)
allow_network_node_tcp_bind(unconfined_ldconfig_t,node_type)
allow_network_node_udp_send(unconfined_ldconfig_t,node_type)
allow_network_node_udp_recv(unconfined_ldconfig_t,node_type)
allow_network_node_udp_bind(unconfined_ldconfig_t,node_type)
allow_network_node_rawip_send(unconfined_ldconfig_t,node_type)
allow_network_node_rawip_recv(unconfined_ldconfig_t,node_type)
allow_network_node_rawip_bind(unconfined_ldconfig_t,node_type)

#unconfined_ldconfig_t and  self can communicate unix domain 

#unix read
allow_ipc_unix_r(unconfined_ldconfig_t,self)

#unix write
allow_ipc_unix_w(unconfined_ldconfig_t,self)

#sem read
allow_ipc_sem_r(unconfined_ldconfig_t,self)

#sem write
allow_ipc_sem_w(unconfined_ldconfig_t,self)

#msg read
allow_ipc_msg_r(unconfined_ldconfig_t,self)

#msg write
allow_ipc_msg_w(unconfined_ldconfig_t,self)

#msgq read
allow_ipc_msgq_r(unconfined_ldconfig_t,self)

#msgq write
allow_ipc_msgq_w(unconfined_ldconfig_t,self)

#shm read
allow_ipc_shm_r(unconfined_ldconfig_t,self)

#shm write
allow_ipc_shm_w(unconfined_ldconfig_t,self)

#pipe read
allow_ipc_pipe_r(unconfined_ldconfig_t,self)

#pipe write
allow_ipc_pipe_w(unconfined_ldconfig_t,self)

#sigchid
allow_signal_sigchld(unconfined_ldconfig_t,init_t)

#sigchid
allow_signal_sigchld(unconfined_ldconfig_t,self)

#sigkill
allow_signal_sigkill(unconfined_ldconfig_t,self)

#sigstop
allow_signal_sigstop(unconfined_ldconfig_t,self)

#signull
allow_signal_signull(unconfined_ldconfig_t,self)

#other signals
allow_signal_sigother(unconfined_ldconfig_t,self)

##TTY configurations 
allow_tty_r(unconfined_ldconfig_t, { devtty_t tty_device_t })
allow_tty_w(unconfined_ldconfig_t, { devtty_t tty_device_t })
allow_tty_r(unconfined_ldconfig_t, ttyfile)
allow_tty_w(unconfined_ldconfig_t, ttyfile)

##PTS configurations 
allow_pts_r(unconfined_ldconfig_t, { devpts_t ptmx_t })
allow_pts_w(unconfined_ldconfig_t, { devpts_t ptmx_t })
allow_pts_r(unconfined_ldconfig_t, ptyfile)
allow_pts_w(unconfined_ldconfig_t, ptyfile)
###allows change tty/pts label
##allowfs rule
#Can access /proc/pid/self
allow_file_r(unconfined_ldconfig_t,self)
allow_file_s(unconfined_ldconfig_t,self)
#Can access proc filesystem.
allow_file_r(unconfined_ldconfig_t,proc_t)
allow_file_s(unconfined_ldconfig_t,proc_t)
#Can access usbfs filesystem.
allow_file_r(unconfined_ldconfig_t,usbfs_t)
allow_file_s(unconfined_ldconfig_t,usbfs_t)
#Can access sysfs filesystem.
allow_file_r(unconfined_ldconfig_t,sysfs_t)
allow_file_s(unconfined_ldconfig_t,sysfs_t)
##end of allowfs rule
##allowfs exclusive rule
##end of allowfs exclusive rule
allow_key_v(unconfined_ldconfig_t,self)
allow_key_r(unconfined_ldconfig_t,self)
allow_key_w(unconfined_ldconfig_t,self)
allow_key_s(unconfined_ldconfig_t,self)
allow_key_l(unconfined_ldconfig_t,self)
allow_key_t(unconfined_ldconfig_t,self)
allow_key_t(unconfined_ldconfig_t,self)
##allowpriv rule
allow_admin_all(unconfined_ldconfig_t)
##end of allowpriv rule

##### endof unconfined_ldconfig_t domain


###########################
############## unconfined_t domain
type unconfined_t,domain,unconfined_domain;
allow unconfined_t self:process transition;
role system_r;
role system_r types unconfined_t;

#rootdir_t:/:---s-----
allow_file_s(unconfined_t,rootdir_t)

#dir_rootdir_t:/:---s-----
allow_file_s(unconfined_t,dir_rootdir_t)

#dev_console_t:/dev/console:rw-s-----
allow_file_r(unconfined_t,dev_console_t)
allow_file_dev_r(unconfined_t,dev_console_t)
allow_file_w(unconfined_t,dev_console_t)
allow_file_dev_w(unconfined_t,dev_console_t)
allow_file_s(unconfined_t,dev_console_t)
allow_file_dev_s(unconfined_t,dev_console_t)

#null_device_t:/dev/null:rw-s-----
allow_file_r(unconfined_t,null_device_t)
allow_file_dev_r(unconfined_t,null_device_t)
allow_file_w(unconfined_t,null_device_t)
allow_file_dev_w(unconfined_t,null_device_t)
allow_file_s(unconfined_t,null_device_t)
allow_file_dev_s(unconfined_t,null_device_t)

#dev_zero_t:/dev/zero:rw-s-----
allow_file_r(unconfined_t,dev_zero_t)
allow_file_dev_r(unconfined_t,dev_zero_t)
allow_file_w(unconfined_t,dev_zero_t)
allow_file_dev_w(unconfined_t,dev_zero_t)
allow_file_s(unconfined_t,dev_zero_t)
allow_file_dev_s(unconfined_t,dev_zero_t)

#dev_random_t:/dev/random:rw-s-----
allow_file_r(unconfined_t,dev_random_t)
allow_file_dev_r(unconfined_t,dev_random_t)
allow_file_w(unconfined_t,dev_random_t)
allow_file_dev_w(unconfined_t,dev_random_t)
allow_file_s(unconfined_t,dev_random_t)
allow_file_dev_s(unconfined_t,dev_random_t)

#dev_urandom_t:/dev/urandom:r-xs-----
allow_file_r(unconfined_t,dev_urandom_t)
allow_file_dev_r(unconfined_t,dev_urandom_t)
allow_file_x(unconfined_t,dev_urandom_t)
allow_file_dev_x(unconfined_t,dev_urandom_t)
allow_file_s(unconfined_t,dev_urandom_t)
allow_file_dev_s(unconfined_t,dev_urandom_t)

#bin_t:/bin:---s-----
allow_file_s(unconfined_t,bin_t)

#dir_bin_t:/bin:---s-----
allow_file_s(unconfined_t,dir_bin_t)

#usr_t:/usr:---s-----
allow_file_s(unconfined_t,usr_t)

#dir_usr_t:/usr:---s-----
allow_file_s(unconfined_t,dir_usr_t)

#sbin_t:/sbin:---s-----
allow_file_s(unconfined_t,sbin_t)

#dir_sbin_t:/sbin:---s-----
allow_file_s(unconfined_t,dir_sbin_t)

#usr_lib_t:/usr/lib:r-xs-----
allow_file_r(unconfined_t,usr_lib_t)
allow_file_x(unconfined_t,usr_lib_t)
allow_file_s(unconfined_t,usr_lib_t)

#dir_usr_lib_t:/usr/lib:r-xs-----
allow_file_r(unconfined_t,dir_usr_lib_t)
allow_file_x(unconfined_t,dir_usr_lib_t)
allow_file_s(unconfined_t,dir_usr_lib_t)

#lib_t:/lib:r-xs-----
allow_file_r(unconfined_t,lib_t)
allow_file_x(unconfined_t,lib_t)
allow_file_s(unconfined_t,lib_t)

#dir_lib_t:/lib:r-xs-----
allow_file_r(unconfined_t,dir_lib_t)
allow_file_x(unconfined_t,dir_lib_t)
allow_file_s(unconfined_t,dir_lib_t)
#Can access allow|allowfs exclusive label(ldconfig_cache_t)

#ldconfig_cache_t:ldconfig_cache_t:r--s-----
allow_file_r(unconfined_t,ldconfig_cache_t)
allow_file_s(unconfined_t,ldconfig_cache_t)

#usr_share_locale_t:/usr/share/locale:r--s-----
allow_file_r(unconfined_t,usr_share_locale_t)
allow_file_s(unconfined_t,usr_share_locale_t)

#dir_usr_share_locale_t:/usr/share/locale:r--s-----
allow_file_r(unconfined_t,dir_usr_share_locale_t)
allow_file_s(unconfined_t,dir_usr_share_locale_t)
#Can access allow|allowfs exclusive label(dev_log_t)

#dev_log_t:dev_log_t:rw-s-----
allow_file_r(unconfined_t,dev_log_t)
allow_file_dev_r(unconfined_t,dev_log_t)
allow_file_w(unconfined_t,dev_log_t)
allow_file_dev_w(unconfined_t,dev_log_t)
allow_file_s(unconfined_t,dev_log_t)
allow_file_dev_s(unconfined_t,dev_log_t)
#Can access allow|allowfs exclusive label(unconfined_var_run_t)

#unconfined_var_run_t:unconfined_var_run_t:rw-s-----
allow_file_r(unconfined_t,unconfined_var_run_t)
allow_file_w(unconfined_t,unconfined_var_run_t)
allow_file_s(unconfined_t,unconfined_var_run_t)

#etc_localtime_t:/etc/localtime:r--s-----
allow_file_r(unconfined_t,etc_localtime_t)
allow_file_s(unconfined_t,etc_localtime_t)

#etc_protocols_t:/etc/protocols:r--s-----
allow_file_r(unconfined_t,etc_protocols_t)
allow_file_s(unconfined_t,etc_protocols_t)

#etc_resolvdconf_t:/etc/resolv.conf:r--s-----
allow_file_r(unconfined_t,etc_resolvdconf_t)
allow_file_s(unconfined_t,etc_resolvdconf_t)

#etc_environment_t:/etc/environment:r--s-----
allow_file_r(unconfined_t,etc_environment_t)
allow_file_s(unconfined_t,etc_environment_t)

#etc_hostsdallow_t:/etc/hosts.allow:r--s-----
allow_file_r(unconfined_t,etc_hostsdallow_t)
allow_file_s(unconfined_t,etc_hostsdallow_t)

#etc_hostsddeny_t:/etc/hosts.deny:r--s-----
allow_file_r(unconfined_t,etc_hostsddeny_t)
allow_file_s(unconfined_t,etc_hostsddeny_t)
#Can access allow|allowfs exclusive label(unconfined_tmp_t)

#unconfined_tmp_t:unconfined_tmp_t:rw-s-----
allow_file_r(unconfined_t,unconfined_tmp_t)
allow_file_w(unconfined_t,unconfined_tmp_t)
allow_file_s(unconfined_t,unconfined_tmp_t)
#Can access allow|allowfs exclusive label(unconfined_var_tmp_t)

#unconfined_var_tmp_t:unconfined_var_tmp_t:rw-s-----
allow_file_r(unconfined_t,unconfined_var_tmp_t)
allow_file_w(unconfined_t,unconfined_var_tmp_t)
allow_file_s(unconfined_t,unconfined_var_tmp_t)
#Can access allow|allowfs exclusive label(unconfined_tmpfs_t)

#unconfined_tmpfs_t:unconfined_tmpfs_t:rw-s-----
allow_file_r(unconfined_t,unconfined_tmpfs_t)
allow_file_w(unconfined_t,unconfined_tmpfs_t)
allow_file_s(unconfined_t,unconfined_tmpfs_t)

#usr_share_zoneinfo_t:/usr/share/zoneinfo:r--s-----
allow_file_r(unconfined_t,usr_share_zoneinfo_t)
allow_file_s(unconfined_t,usr_share_zoneinfo_t)

#dir_usr_share_zoneinfo_t:/usr/share/zoneinfo:r--s-----
allow_file_r(unconfined_t,dir_usr_share_zoneinfo_t)
allow_file_s(unconfined_t,dir_usr_share_zoneinfo_t)

#sbin_syslogd_t:/sbin/syslogd:---s-----
allow_file_s(unconfined_t,sbin_syslogd_t)

#sbin_ldconfig_t:/sbin/ldconfig:---s-----
allow_file_s(unconfined_t,sbin_ldconfig_t)

#sbin_minilogd_t:/sbin/minilogd:---s-----
allow_file_s(unconfined_t,sbin_minilogd_t)

#bin_login_t:/bin/login:---s-----
allow_file_s(unconfined_t,bin_login_t)

#sbin_init_t:/sbin/init:---s-----
allow_file_s(unconfined_t,sbin_init_t)

#usr_share_t:/usr/share:---s-----
allow_file_s(unconfined_t,usr_share_t)

#dir_usr_share_t:/usr/share:---s-----
allow_file_s(unconfined_t,dir_usr_share_t)

####file_type_auto_trans rule
file_type_auto_trans(unconfined_t,dir_var_run_t,unconfined_var_run_t)
file_type_auto_trans(unconfined_t,tmp_t,unconfined_tmp_t)
file_type_auto_trans(unconfined_t,var_tmp_t,unconfined_var_tmp_t)
####
##Begin of implicit dir:search
allow unconfined_t dir_rootdir_t:dir search;
allow unconfined_t dir_etc_t:dir search;
allow unconfined_t dir_dev_t:dir search;
allow unconfined_t dir_usr_t:dir search;
allow unconfined_t dir_usr_share_t:dir search;
##End of implicit dir:search
allow_network_netif_tcp_send(unconfined_t,netif_type)
allow_network_netif_tcp_recv(unconfined_t,netif_type)
allow_network_netif_udp_send(unconfined_t,netif_type)
allow_network_netif_udp_recv(unconfined_t,netif_type)
allow_network_netif_rawip_send(unconfined_t,netif_type)
allow_network_netif_rawip_recv(unconfined_t,netif_type)
allow_network_node_tcp_send(unconfined_t,node_type)
allow_network_node_tcp_recv(unconfined_t,node_type)
allow_network_node_tcp_bind(unconfined_t,node_type)
allow_network_node_udp_send(unconfined_t,node_type)
allow_network_node_udp_recv(unconfined_t,node_type)
allow_network_node_udp_bind(unconfined_t,node_type)
allow_network_node_rawip_send(unconfined_t,node_type)
allow_network_node_rawip_recv(unconfined_t,node_type)
allow_network_node_rawip_bind(unconfined_t,node_type)

#unconfined_t and  self can communicate unix domain 

#unix read
allow_ipc_unix_r(unconfined_t,self)

#unix write
allow_ipc_unix_w(unconfined_t,self)

#sem read
allow_ipc_sem_r(unconfined_t,self)

#sem write
allow_ipc_sem_w(unconfined_t,self)

#msg read
allow_ipc_msg_r(unconfined_t,self)

#msg write
allow_ipc_msg_w(unconfined_t,self)

#msgq read
allow_ipc_msgq_r(unconfined_t,self)

#msgq write
allow_ipc_msgq_w(unconfined_t,self)

#shm read
allow_ipc_shm_r(unconfined_t,self)

#shm write
allow_ipc_shm_w(unconfined_t,self)

#pipe read
allow_ipc_pipe_r(unconfined_t,self)

#pipe write
allow_ipc_pipe_w(unconfined_t,self)

#sigchid
allow_signal_sigchld(unconfined_t,init_t)

#sigchid
allow_signal_sigchld(unconfined_t,self)

#sigkill
allow_signal_sigkill(unconfined_t,self)

#sigstop
allow_signal_sigstop(unconfined_t,self)

#signull
allow_signal_signull(unconfined_t,self)

#other signals
allow_signal_sigother(unconfined_t,self)

#unconfined_t and  syslogd_t can communicate unix domain 

#unix read
allow_ipc_unix_r(unconfined_t,syslogd_t)

#unix write
allow_ipc_unix_w(unconfined_t,syslogd_t)

##TTY configurations 
allow_tty_r(unconfined_t, { devtty_t tty_device_t })
allow_tty_w(unconfined_t, { devtty_t tty_device_t })
allow_tty_r(unconfined_t, ttyfile)
allow_tty_w(unconfined_t, ttyfile)

##PTS configurations 
allow_pts_r(unconfined_t, { devpts_t ptmx_t })
allow_pts_w(unconfined_t, { devpts_t ptmx_t })
allow_pts_r(unconfined_t, ptyfile)
allow_pts_w(unconfined_t, ptyfile)
###allows change tty/pts label
##allowfs rule
#Can access /proc/pid/self
allow_file_r(unconfined_t,self)
allow_file_s(unconfined_t,self)
#Can access proc filesystem.
allow_file_r(unconfined_t,proc_t)
allow_file_s(unconfined_t,proc_t)
#Can access usbfs filesystem.
allow_file_r(unconfined_t,usbfs_t)
allow_file_s(unconfined_t,usbfs_t)
#Can access sysfs filesystem.
allow_file_r(unconfined_t,sysfs_t)
allow_file_s(unconfined_t,sysfs_t)
##end of allowfs rule
##allowfs exclusive rule
#file type trans in tmpfs filesystem
file_type_auto_trans(unconfined_t, tmpfs_t, unconfined_tmpfs_t)
##end of allowfs exclusive rule
allow_key_v(unconfined_t,self)
allow_key_r(unconfined_t,self)
allow_key_w(unconfined_t,self)
allow_key_s(unconfined_t,self)
allow_key_l(unconfined_t,self)
allow_key_t(unconfined_t,self)
allow_key_t(unconfined_t,self)
##allowpriv rule
allow_admin_cap_setuid(unconfined_t)
allow_admin_cap_setgid(unconfined_t)
allow_admin_all(unconfined_t)
##end of allowpriv rule

##### endof unconfined_t domain


###########################
############## init_t domain
type init_t,domain,unconfined_domain;
allow init_t self:process transition;
role system_r;
role system_r types init_t;

#rootdir_t:/:---s-----
allow_file_s(init_t,rootdir_t)

#dir_rootdir_t:/:---s-----
allow_file_s(init_t,dir_rootdir_t)

#dev_console_t:/dev/console:rw-s-----
allow_file_r(init_t,dev_console_t)
allow_file_dev_r(init_t,dev_console_t)
allow_file_w(init_t,dev_console_t)
allow_file_dev_w(init_t,dev_console_t)
allow_file_s(init_t,dev_console_t)
allow_file_dev_s(init_t,dev_console_t)

#null_device_t:/dev/null:rw-s-----
allow_file_r(init_t,null_device_t)
allow_file_dev_r(init_t,null_device_t)
allow_file_w(init_t,null_device_t)
allow_file_dev_w(init_t,null_device_t)
allow_file_s(init_t,null_device_t)
allow_file_dev_s(init_t,null_device_t)

#dev_zero_t:/dev/zero:rw-s-----
allow_file_r(init_t,dev_zero_t)
allow_file_dev_r(init_t,dev_zero_t)
allow_file_w(init_t,dev_zero_t)
allow_file_dev_w(init_t,dev_zero_t)
allow_file_s(init_t,dev_zero_t)
allow_file_dev_s(init_t,dev_zero_t)

#dev_random_t:/dev/random:rw-s-----
allow_file_r(init_t,dev_random_t)
allow_file_dev_r(init_t,dev_random_t)
allow_file_w(init_t,dev_random_t)
allow_file_dev_w(init_t,dev_random_t)
allow_file_s(init_t,dev_random_t)
allow_file_dev_s(init_t,dev_random_t)

#dev_urandom_t:/dev/urandom:r-xs-----
allow_file_r(init_t,dev_urandom_t)
allow_file_dev_r(init_t,dev_urandom_t)
allow_file_x(init_t,dev_urandom_t)
allow_file_dev_x(init_t,dev_urandom_t)
allow_file_s(init_t,dev_urandom_t)
allow_file_dev_s(init_t,dev_urandom_t)

#bin_t:/bin:---s-----
allow_file_s(init_t,bin_t)

#dir_bin_t:/bin:---s-----
allow_file_s(init_t,dir_bin_t)

#usr_t:/usr:---s-----
allow_file_s(init_t,usr_t)

#dir_usr_t:/usr:---s-----
allow_file_s(init_t,dir_usr_t)

#sbin_t:/sbin:---s-----
allow_file_s(init_t,sbin_t)

#dir_sbin_t:/sbin:---s-----
allow_file_s(init_t,dir_sbin_t)

#usr_lib_t:/usr/lib:r-xs-----
allow_file_r(init_t,usr_lib_t)
allow_file_x(init_t,usr_lib_t)
allow_file_s(init_t,usr_lib_t)

#dir_usr_lib_t:/usr/lib:r-xs-----
allow_file_r(init_t,dir_usr_lib_t)
allow_file_x(init_t,dir_usr_lib_t)
allow_file_s(init_t,dir_usr_lib_t)

#lib_t:/lib:r-xs-----
allow_file_r(init_t,lib_t)
allow_file_x(init_t,lib_t)
allow_file_s(init_t,lib_t)

#dir_lib_t:/lib:r-xs-----
allow_file_r(init_t,dir_lib_t)
allow_file_x(init_t,dir_lib_t)
allow_file_s(init_t,dir_lib_t)
#Can access allow|allowfs exclusive label(ldconfig_cache_t)

#ldconfig_cache_t:ldconfig_cache_t:r--s-----
allow_file_r(init_t,ldconfig_cache_t)
allow_file_s(init_t,ldconfig_cache_t)

#usr_share_locale_t:/usr/share/locale:r--s-----
allow_file_r(init_t,usr_share_locale_t)
allow_file_s(init_t,usr_share_locale_t)

#dir_usr_share_locale_t:/usr/share/locale:r--s-----
allow_file_r(init_t,dir_usr_share_locale_t)
allow_file_s(init_t,dir_usr_share_locale_t)

#sbin_syslogd_t:/sbin/syslogd:---s-----
allow_file_s(init_t,sbin_syslogd_t)

#sbin_ldconfig_t:/sbin/ldconfig:---s-----
allow_file_s(init_t,sbin_ldconfig_t)

#sbin_minilogd_t:/sbin/minilogd:---s-----
allow_file_s(init_t,sbin_minilogd_t)

#usr_share_zoneinfo_t:/usr/share/zoneinfo:---s-----
allow_file_s(init_t,usr_share_zoneinfo_t)

#bin_login_t:/bin/login:---s-----
allow_file_s(init_t,bin_login_t)

#sbin_init_t:/sbin/init:---s-----
allow_file_s(init_t,sbin_init_t)

#usr_share_t:/usr/share:---s-----
allow_file_s(init_t,usr_share_t)

#dir_usr_share_zoneinfo_t:/usr/share/zoneinfo:---s-----
allow_file_s(init_t,dir_usr_share_zoneinfo_t)

#dir_usr_share_t:/usr/share:---s-----
allow_file_s(init_t,dir_usr_share_t)

####file_type_auto_trans rule
file_type_auto_trans(init_t,dir_etc_t,etc_runtime_t)
####
##Begin of implicit dir:search
allow init_t dir_rootdir_t:dir search;
allow init_t dir_dev_t:dir search;
allow init_t dir_usr_t:dir search;
allow init_t dir_usr_share_t:dir search;
##End of implicit dir:search
allow_network_netif_tcp_send(init_t,netif_type)
allow_network_netif_tcp_recv(init_t,netif_type)
allow_network_netif_udp_send(init_t,netif_type)
allow_network_netif_udp_recv(init_t,netif_type)
allow_network_netif_rawip_send(init_t,netif_type)
allow_network_netif_rawip_recv(init_t,netif_type)
allow_network_node_tcp_send(init_t,node_type)
allow_network_node_tcp_recv(init_t,node_type)
allow_network_node_tcp_bind(init_t,node_type)
allow_network_node_udp_send(init_t,node_type)
allow_network_node_udp_recv(init_t,node_type)
allow_network_node_udp_bind(init_t,node_type)
allow_network_node_rawip_send(init_t,node_type)
allow_network_node_rawip_recv(init_t,node_type)
allow_network_node_rawip_bind(init_t,node_type)

#init_t and  self can communicate unix domain 

#unix read
allow_ipc_unix_r(init_t,self)

#unix write
allow_ipc_unix_w(init_t,self)

#sem read
allow_ipc_sem_r(init_t,self)

#sem write
allow_ipc_sem_w(init_t,self)

#msg read
allow_ipc_msg_r(init_t,self)

#msg write
allow_ipc_msg_w(init_t,self)

#msgq read
allow_ipc_msgq_r(init_t,self)

#msgq write
allow_ipc_msgq_w(init_t,self)

#shm read
allow_ipc_shm_r(init_t,self)

#shm write
allow_ipc_shm_w(init_t,self)

#pipe read
allow_ipc_pipe_r(init_t,self)

#pipe write
allow_ipc_pipe_w(init_t,self)

#sigchid
allow_signal_sigchld(init_t,init_t)

#sigchid
allow_signal_sigchld(init_t,self)

#sigkill
allow_signal_sigkill(init_t,self)

#sigstop
allow_signal_sigstop(init_t,self)

#signull
allow_signal_signull(init_t,self)

#other signals
allow_signal_sigother(init_t,self)

##TTY configurations 
allow_tty_r(init_t, { devtty_t tty_device_t })
allow_tty_w(init_t, { devtty_t tty_device_t })
allow_tty_r(init_t, ttyfile)
allow_tty_w(init_t, ttyfile)

##PTS configurations 
allow_pts_r(init_t, { devpts_t ptmx_t })
allow_pts_w(init_t, { devpts_t ptmx_t })
allow_pts_r(init_t, ptyfile)
allow_pts_w(init_t, ptyfile)
###allows change tty/pts label
##allowfs rule
#Can access /proc/pid/self
allow_file_r(init_t,self)
allow_file_s(init_t,self)
#Can access proc filesystem.
allow_file_r(init_t,proc_t)
allow_file_s(init_t,proc_t)
#Can access usbfs filesystem.
allow_file_r(init_t,usbfs_t)
allow_file_s(init_t,usbfs_t)
#Can access sysfs filesystem.
allow_file_r(init_t,sysfs_t)
allow_file_s(init_t,sysfs_t)
##end of allowfs rule
##allowfs exclusive rule
##end of allowfs exclusive rule
allow_key_v(init_t,self)
allow_key_r(init_t,self)
allow_key_w(init_t,self)
allow_key_s(init_t,self)
allow_key_l(init_t,self)
allow_key_t(init_t,self)
allow_key_t(init_t,self)
##allowpriv rule
allow_admin_all(init_t)
##end of allowpriv rule

##### endof init_t domain


###########################
############## kernel_t domain
type kernel_t,domain,unconfined_domain;
allow kernel_t self:process transition;
role system_r;
role system_r types kernel_t;

#rootdir_t:/:---s-----
allow_file_s(kernel_t,rootdir_t)

#dir_rootdir_t:/:---s-----
allow_file_s(kernel_t,dir_rootdir_t)

#dev_console_t:/dev/console:rw-s-----
allow_file_r(kernel_t,dev_console_t)
allow_file_dev_r(kernel_t,dev_console_t)
allow_file_w(kernel_t,dev_console_t)
allow_file_dev_w(kernel_t,dev_console_t)
allow_file_s(kernel_t,dev_console_t)
allow_file_dev_s(kernel_t,dev_console_t)

#null_device_t:/dev/null:rw-s-----
allow_file_r(kernel_t,null_device_t)
allow_file_dev_r(kernel_t,null_device_t)
allow_file_w(kernel_t,null_device_t)
allow_file_dev_w(kernel_t,null_device_t)
allow_file_s(kernel_t,null_device_t)
allow_file_dev_s(kernel_t,null_device_t)

#dev_zero_t:/dev/zero:rw-s-----
allow_file_r(kernel_t,dev_zero_t)
allow_file_dev_r(kernel_t,dev_zero_t)
allow_file_w(kernel_t,dev_zero_t)
allow_file_dev_w(kernel_t,dev_zero_t)
allow_file_s(kernel_t,dev_zero_t)
allow_file_dev_s(kernel_t,dev_zero_t)

#dev_random_t:/dev/random:rw-s-----
allow_file_r(kernel_t,dev_random_t)
allow_file_dev_r(kernel_t,dev_random_t)
allow_file_w(kernel_t,dev_random_t)
allow_file_dev_w(kernel_t,dev_random_t)
allow_file_s(kernel_t,dev_random_t)
allow_file_dev_s(kernel_t,dev_random_t)

#dev_urandom_t:/dev/urandom:r-xs-----
allow_file_r(kernel_t,dev_urandom_t)
allow_file_dev_r(kernel_t,dev_urandom_t)
allow_file_x(kernel_t,dev_urandom_t)
allow_file_dev_x(kernel_t,dev_urandom_t)
allow_file_s(kernel_t,dev_urandom_t)
allow_file_dev_s(kernel_t,dev_urandom_t)

#bin_t:/bin:---s-----
allow_file_s(kernel_t,bin_t)

#dir_bin_t:/bin:---s-----
allow_file_s(kernel_t,dir_bin_t)

#usr_t:/usr:---s-----
allow_file_s(kernel_t,usr_t)

#dir_usr_t:/usr:---s-----
allow_file_s(kernel_t,dir_usr_t)

#sbin_t:/sbin:---s-----
allow_file_s(kernel_t,sbin_t)

#dir_sbin_t:/sbin:---s-----
allow_file_s(kernel_t,dir_sbin_t)

#usr_lib_t:/usr/lib:r-xs-----
allow_file_r(kernel_t,usr_lib_t)
allow_file_x(kernel_t,usr_lib_t)
allow_file_s(kernel_t,usr_lib_t)

#dir_usr_lib_t:/usr/lib:r-xs-----
allow_file_r(kernel_t,dir_usr_lib_t)
allow_file_x(kernel_t,dir_usr_lib_t)
allow_file_s(kernel_t,dir_usr_lib_t)

#lib_t:/lib:r-xs-----
allow_file_r(kernel_t,lib_t)
allow_file_x(kernel_t,lib_t)
allow_file_s(kernel_t,lib_t)

#dir_lib_t:/lib:r-xs-----
allow_file_r(kernel_t,dir_lib_t)
allow_file_x(kernel_t,dir_lib_t)
allow_file_s(kernel_t,dir_lib_t)
#Can access allow|allowfs exclusive label(ldconfig_cache_t)

#ldconfig_cache_t:ldconfig_cache_t:r--s-----
allow_file_r(kernel_t,ldconfig_cache_t)
allow_file_s(kernel_t,ldconfig_cache_t)

#usr_share_locale_t:/usr/share/locale:r--s-----
allow_file_r(kernel_t,usr_share_locale_t)
allow_file_s(kernel_t,usr_share_locale_t)

#dir_usr_share_locale_t:/usr/share/locale:r--s-----
allow_file_r(kernel_t,dir_usr_share_locale_t)
allow_file_s(kernel_t,dir_usr_share_locale_t)

#sbin_syslogd_t:/sbin/syslogd:---s-----
allow_file_s(kernel_t,sbin_syslogd_t)

#sbin_ldconfig_t:/sbin/ldconfig:---s-----
allow_file_s(kernel_t,sbin_ldconfig_t)

#sbin_minilogd_t:/sbin/minilogd:---s-----
allow_file_s(kernel_t,sbin_minilogd_t)

#usr_share_zoneinfo_t:/usr/share/zoneinfo:---s-----
allow_file_s(kernel_t,usr_share_zoneinfo_t)

#bin_login_t:/bin/login:---s-----
allow_file_s(kernel_t,bin_login_t)

#sbin_init_t:/sbin/init:---s-----
allow_file_s(kernel_t,sbin_init_t)

#usr_share_t:/usr/share:---s-----
allow_file_s(kernel_t,usr_share_t)

#dir_usr_share_zoneinfo_t:/usr/share/zoneinfo:---s-----
allow_file_s(kernel_t,dir_usr_share_zoneinfo_t)

#dir_usr_share_t:/usr/share:---s-----
allow_file_s(kernel_t,dir_usr_share_t)
##Begin of implicit dir:search
allow kernel_t dir_rootdir_t:dir search;
allow kernel_t dir_dev_t:dir search;
allow kernel_t dir_usr_t:dir search;
allow kernel_t dir_usr_share_t:dir search;
##End of implicit dir:search
allow_network_netif_tcp_send(kernel_t,netif_type)
allow_network_netif_tcp_recv(kernel_t,netif_type)
allow_network_netif_udp_send(kernel_t,netif_type)
allow_network_netif_udp_recv(kernel_t,netif_type)
allow_network_netif_rawip_send(kernel_t,netif_type)
allow_network_netif_rawip_recv(kernel_t,netif_type)
allow_network_node_tcp_send(kernel_t,node_type)
allow_network_node_tcp_recv(kernel_t,node_type)
allow_network_node_tcp_bind(kernel_t,node_type)
allow_network_node_udp_send(kernel_t,node_type)
allow_network_node_udp_recv(kernel_t,node_type)
allow_network_node_udp_bind(kernel_t,node_type)
allow_network_node_rawip_send(kernel_t,node_type)
allow_network_node_rawip_recv(kernel_t,node_type)
allow_network_node_rawip_bind(kernel_t,node_type)

#kernel_t and  self can communicate unix domain 

#unix read
allow_ipc_unix_r(kernel_t,self)

#unix write
allow_ipc_unix_w(kernel_t,self)

#sem read
allow_ipc_sem_r(kernel_t,self)

#sem write
allow_ipc_sem_w(kernel_t,self)

#msg read
allow_ipc_msg_r(kernel_t,self)

#msg write
allow_ipc_msg_w(kernel_t,self)

#msgq read
allow_ipc_msgq_r(kernel_t,self)

#msgq write
allow_ipc_msgq_w(kernel_t,self)

#shm read
allow_ipc_shm_r(kernel_t,self)

#shm write
allow_ipc_shm_w(kernel_t,self)

#pipe read
allow_ipc_pipe_r(kernel_t,self)

#pipe write
allow_ipc_pipe_w(kernel_t,self)

#sigchid
allow_signal_sigchld(kernel_t,init_t)

#sigchid
allow_signal_sigchld(kernel_t,self)

#sigkill
allow_signal_sigkill(kernel_t,self)

#sigstop
allow_signal_sigstop(kernel_t,self)

#signull
allow_signal_signull(kernel_t,self)

#other signals
allow_signal_sigother(kernel_t,self)

##TTY configurations 
allow_tty_r(kernel_t, { devtty_t tty_device_t })
allow_tty_w(kernel_t, { devtty_t tty_device_t })
allow_tty_r(kernel_t, ttyfile)
allow_tty_w(kernel_t, ttyfile)

##PTS configurations 
allow_pts_r(kernel_t, { devpts_t ptmx_t })
allow_pts_w(kernel_t, { devpts_t ptmx_t })
allow_pts_r(kernel_t, ptyfile)
allow_pts_w(kernel_t, ptyfile)
###allows change tty/pts label
##allowfs rule
#Can access /proc/pid/self
allow_file_r(kernel_t,self)
allow_file_s(kernel_t,self)
#Can access proc filesystem.
allow_file_r(kernel_t,proc_t)
allow_file_s(kernel_t,proc_t)
#Can access usbfs filesystem.
allow_file_r(kernel_t,usbfs_t)
allow_file_s(kernel_t,usbfs_t)
#Can access sysfs filesystem.
allow_file_r(kernel_t,sysfs_t)
allow_file_s(kernel_t,sysfs_t)
##end of allowfs rule
##allowfs exclusive rule
##end of allowfs exclusive rule
allow_key_v(kernel_t,self)
allow_key_r(kernel_t,self)
allow_key_w(kernel_t,self)
allow_key_s(kernel_t,self)
allow_key_l(kernel_t,self)
allow_key_t(kernel_t,self)
allow_key_t(kernel_t,self)
##allowpriv rule
allow_admin_all(kernel_t)
##end of allowpriv rule

##### endof kernel_t domain


###########################
############## initrc_t domain
type initrc_t,domain,unconfined_domain;
allow initrc_t self:process transition;
role system_r;
role system_r types initrc_t;

#rootdir_t:/:---s-----
allow_file_s(initrc_t,rootdir_t)

#dir_rootdir_t:/:---s-----
allow_file_s(initrc_t,dir_rootdir_t)

#dev_console_t:/dev/console:rw-s-----
allow_file_r(initrc_t,dev_console_t)
allow_file_dev_r(initrc_t,dev_console_t)
allow_file_w(initrc_t,dev_console_t)
allow_file_dev_w(initrc_t,dev_console_t)
allow_file_s(initrc_t,dev_console_t)
allow_file_dev_s(initrc_t,dev_console_t)

#null_device_t:/dev/null:rw-s-----
allow_file_r(initrc_t,null_device_t)
allow_file_dev_r(initrc_t,null_device_t)
allow_file_w(initrc_t,null_device_t)
allow_file_dev_w(initrc_t,null_device_t)
allow_file_s(initrc_t,null_device_t)
allow_file_dev_s(initrc_t,null_device_t)

#dev_zero_t:/dev/zero:rw-s-----
allow_file_r(initrc_t,dev_zero_t)
allow_file_dev_r(initrc_t,dev_zero_t)
allow_file_w(initrc_t,dev_zero_t)
allow_file_dev_w(initrc_t,dev_zero_t)
allow_file_s(initrc_t,dev_zero_t)
allow_file_dev_s(initrc_t,dev_zero_t)

#dev_random_t:/dev/random:rw-s-----
allow_file_r(initrc_t,dev_random_t)
allow_file_dev_r(initrc_t,dev_random_t)
allow_file_w(initrc_t,dev_random_t)
allow_file_dev_w(initrc_t,dev_random_t)
allow_file_s(initrc_t,dev_random_t)
allow_file_dev_s(initrc_t,dev_random_t)

#dev_urandom_t:/dev/urandom:r-xs-----
allow_file_r(initrc_t,dev_urandom_t)
allow_file_dev_r(initrc_t,dev_urandom_t)
allow_file_x(initrc_t,dev_urandom_t)
allow_file_dev_x(initrc_t,dev_urandom_t)
allow_file_s(initrc_t,dev_urandom_t)
allow_file_dev_s(initrc_t,dev_urandom_t)

#bin_t:/bin:---s-----
allow_file_s(initrc_t,bin_t)

#dir_bin_t:/bin:---s-----
allow_file_s(initrc_t,dir_bin_t)

#usr_t:/usr:---s-----
allow_file_s(initrc_t,usr_t)

#dir_usr_t:/usr:---s-----
allow_file_s(initrc_t,dir_usr_t)

#sbin_t:/sbin:---s-----
allow_file_s(initrc_t,sbin_t)

#dir_sbin_t:/sbin:---s-----
allow_file_s(initrc_t,dir_sbin_t)

#usr_lib_t:/usr/lib:r-xs-----
allow_file_r(initrc_t,usr_lib_t)
allow_file_x(initrc_t,usr_lib_t)
allow_file_s(initrc_t,usr_lib_t)

#dir_usr_lib_t:/usr/lib:r-xs-----
allow_file_r(initrc_t,dir_usr_lib_t)
allow_file_x(initrc_t,dir_usr_lib_t)
allow_file_s(initrc_t,dir_usr_lib_t)

#lib_t:/lib:r-xs-----
allow_file_r(initrc_t,lib_t)
allow_file_x(initrc_t,lib_t)
allow_file_s(initrc_t,lib_t)

#dir_lib_t:/lib:r-xs-----
allow_file_r(initrc_t,dir_lib_t)
allow_file_x(initrc_t,dir_lib_t)
allow_file_s(initrc_t,dir_lib_t)
#Can access allow|allowfs exclusive label(ldconfig_cache_t)

#ldconfig_cache_t:ldconfig_cache_t:r--s-----
allow_file_r(initrc_t,ldconfig_cache_t)
allow_file_s(initrc_t,ldconfig_cache_t)

#usr_share_locale_t:/usr/share/locale:r--s-----
allow_file_r(initrc_t,usr_share_locale_t)
allow_file_s(initrc_t,usr_share_locale_t)

#dir_usr_share_locale_t:/usr/share/locale:r--s-----
allow_file_r(initrc_t,dir_usr_share_locale_t)
allow_file_s(initrc_t,dir_usr_share_locale_t)
#Can access allow|allowfs exclusive label(dev_log_t)

#dev_log_t:dev_log_t:rw-s-----
allow_file_r(initrc_t,dev_log_t)
allow_file_dev_r(initrc_t,dev_log_t)
allow_file_w(initrc_t,dev_log_t)
allow_file_dev_w(initrc_t,dev_log_t)
allow_file_s(initrc_t,dev_log_t)
allow_file_dev_s(initrc_t,dev_log_t)
#Can access allow|allowfs exclusive label(initrc_var_run_t)

#initrc_var_run_t:initrc_var_run_t:rw-s-----
allow_file_r(initrc_t,initrc_var_run_t)
allow_file_w(initrc_t,initrc_var_run_t)
allow_file_s(initrc_t,initrc_var_run_t)

#etc_localtime_t:/etc/localtime:r--s-----
allow_file_r(initrc_t,etc_localtime_t)
allow_file_s(initrc_t,etc_localtime_t)

#etc_protocols_t:/etc/protocols:r--s-----
allow_file_r(initrc_t,etc_protocols_t)
allow_file_s(initrc_t,etc_protocols_t)

#etc_resolvdconf_t:/etc/resolv.conf:r--s-----
allow_file_r(initrc_t,etc_resolvdconf_t)
allow_file_s(initrc_t,etc_resolvdconf_t)

#etc_environment_t:/etc/environment:r--s-----
allow_file_r(initrc_t,etc_environment_t)
allow_file_s(initrc_t,etc_environment_t)

#etc_hostsdallow_t:/etc/hosts.allow:r--s-----
allow_file_r(initrc_t,etc_hostsdallow_t)
allow_file_s(initrc_t,etc_hostsdallow_t)

#etc_hostsddeny_t:/etc/hosts.deny:r--s-----
allow_file_r(initrc_t,etc_hostsddeny_t)
allow_file_s(initrc_t,etc_hostsddeny_t)
#Can access allow|allowfs exclusive label(initrc_tmp_t)

#initrc_tmp_t:initrc_tmp_t:rw-s-----
allow_file_r(initrc_t,initrc_tmp_t)
allow_file_w(initrc_t,initrc_tmp_t)
allow_file_s(initrc_t,initrc_tmp_t)
#Can access allow|allowfs exclusive label(initrc_var_tmp_t)

#initrc_var_tmp_t:initrc_var_tmp_t:rw-s-----
allow_file_r(initrc_t,initrc_var_tmp_t)
allow_file_w(initrc_t,initrc_var_tmp_t)
allow_file_s(initrc_t,initrc_var_tmp_t)
#Can access allow|allowfs exclusive label(initrc_tmpfs_t)

#initrc_tmpfs_t:initrc_tmpfs_t:rw-s-----
allow_file_r(initrc_t,initrc_tmpfs_t)
allow_file_w(initrc_t,initrc_tmpfs_t)
allow_file_s(initrc_t,initrc_tmpfs_t)

#usr_share_zoneinfo_t:/usr/share/zoneinfo:r--s-----
allow_file_r(initrc_t,usr_share_zoneinfo_t)
allow_file_s(initrc_t,usr_share_zoneinfo_t)

#dir_usr_share_zoneinfo_t:/usr/share/zoneinfo:r--s-----
allow_file_r(initrc_t,dir_usr_share_zoneinfo_t)
allow_file_s(initrc_t,dir_usr_share_zoneinfo_t)

#sbin_syslogd_t:/sbin/syslogd:---s-----
allow_file_s(initrc_t,sbin_syslogd_t)

#sbin_ldconfig_t:/sbin/ldconfig:---s-----
allow_file_s(initrc_t,sbin_ldconfig_t)

#sbin_minilogd_t:/sbin/minilogd:---s-----
allow_file_s(initrc_t,sbin_minilogd_t)

#bin_login_t:/bin/login:---s-----
allow_file_s(initrc_t,bin_login_t)

#sbin_init_t:/sbin/init:---s-----
allow_file_s(initrc_t,sbin_init_t)

#usr_share_t:/usr/share:---s-----
allow_file_s(initrc_t,usr_share_t)

#dir_usr_share_t:/usr/share:---s-----
allow_file_s(initrc_t,dir_usr_share_t)

####file_type_auto_trans rule
file_type_auto_trans(initrc_t,dir_var_run_t,initrc_var_run_t)
file_type_auto_trans(initrc_t,tmp_t,initrc_tmp_t)
file_type_auto_trans(initrc_t,var_tmp_t,initrc_var_tmp_t)
file_type_auto_trans(initrc_t,dir_etc_t,etc_runtime_t)
####
##Begin of implicit dir:search
allow initrc_t dir_rootdir_t:dir search;
allow initrc_t dir_etc_t:dir search;
allow initrc_t dir_dev_t:dir search;
allow initrc_t dir_usr_t:dir search;
allow initrc_t dir_usr_share_t:dir search;
##End of implicit dir:search
allow_network_netif_tcp_send(initrc_t,netif_type)
allow_network_netif_tcp_recv(initrc_t,netif_type)
allow_network_netif_udp_send(initrc_t,netif_type)
allow_network_netif_udp_recv(initrc_t,netif_type)
allow_network_netif_rawip_send(initrc_t,netif_type)
allow_network_netif_rawip_recv(initrc_t,netif_type)
allow_network_node_tcp_send(initrc_t,node_type)
allow_network_node_tcp_recv(initrc_t,node_type)
allow_network_node_tcp_bind(initrc_t,node_type)
allow_network_node_udp_send(initrc_t,node_type)
allow_network_node_udp_recv(initrc_t,node_type)
allow_network_node_udp_bind(initrc_t,node_type)
allow_network_node_rawip_send(initrc_t,node_type)
allow_network_node_rawip_recv(initrc_t,node_type)
allow_network_node_rawip_bind(initrc_t,node_type)

#initrc_t and  self can communicate unix domain 

#unix read
allow_ipc_unix_r(initrc_t,self)

#unix write
allow_ipc_unix_w(initrc_t,self)

#sem read
allow_ipc_sem_r(initrc_t,self)

#sem write
allow_ipc_sem_w(initrc_t,self)

#msg read
allow_ipc_msg_r(initrc_t,self)

#msg write
allow_ipc_msg_w(initrc_t,self)

#msgq read
allow_ipc_msgq_r(initrc_t,self)

#msgq write
allow_ipc_msgq_w(initrc_t,self)

#shm read
allow_ipc_shm_r(initrc_t,self)

#shm write
allow_ipc_shm_w(initrc_t,self)

#pipe read
allow_ipc_pipe_r(initrc_t,self)

#pipe write
allow_ipc_pipe_w(initrc_t,self)

#sigchid
allow_signal_sigchld(initrc_t,init_t)

#sigchid
allow_signal_sigchld(initrc_t,self)

#sigkill
allow_signal_sigkill(initrc_t,self)

#sigstop
allow_signal_sigstop(initrc_t,self)

#signull
allow_signal_signull(initrc_t,self)

#other signals
allow_signal_sigother(initrc_t,self)

#initrc_t and  syslogd_t can communicate unix domain 

#unix read
allow_ipc_unix_r(initrc_t,syslogd_t)

#unix write
allow_ipc_unix_w(initrc_t,syslogd_t)

##TTY configurations 
allow_tty_r(initrc_t, { devtty_t tty_device_t })
allow_tty_w(initrc_t, { devtty_t tty_device_t })
allow_tty_r(initrc_t, ttyfile)
allow_tty_w(initrc_t, ttyfile)

##PTS configurations 
allow_pts_r(initrc_t, { devpts_t ptmx_t })
allow_pts_w(initrc_t, { devpts_t ptmx_t })
allow_pts_r(initrc_t, ptyfile)
allow_pts_w(initrc_t, ptyfile)
###allows change tty/pts label
##allowfs rule
#Can access /proc/pid/self
allow_file_r(initrc_t,self)
allow_file_s(initrc_t,self)
#Can access proc filesystem.
allow_file_r(initrc_t,proc_t)
allow_file_s(initrc_t,proc_t)
#Can access usbfs filesystem.
allow_file_r(initrc_t,usbfs_t)
allow_file_s(initrc_t,usbfs_t)
#Can access sysfs filesystem.
allow_file_r(initrc_t,sysfs_t)
allow_file_s(initrc_t,sysfs_t)
##end of allowfs rule
##allowfs exclusive rule
#file type trans in tmpfs filesystem
file_type_auto_trans(initrc_t, tmpfs_t, initrc_tmpfs_t)
##end of allowfs exclusive rule
allow_key_v(initrc_t,self)
allow_key_r(initrc_t,self)
allow_key_w(initrc_t,self)
allow_key_s(initrc_t,self)
allow_key_l(initrc_t,self)
allow_key_t(initrc_t,self)
allow_key_t(initrc_t,self)
##allowpriv rule
allow_admin_cap_setuid(initrc_t)
allow_admin_cap_setgid(initrc_t)
allow_admin_all(initrc_t)
##end of allowpriv rule

##### endof initrc_t domain


###########################
############## syslogd_t domain
type syslogd_t,domain;
role system_r;
role system_r types syslogd_t;

#rootdir_t:/:---s-----
allow_file_s(syslogd_t,rootdir_t)

#dir_rootdir_t:/:---s-----
allow_file_s(syslogd_t,dir_rootdir_t)

#dev_console_t:/dev/console:rw-s-----
allow_file_r(syslogd_t,dev_console_t)
allow_file_dev_r(syslogd_t,dev_console_t)
allow_file_w(syslogd_t,dev_console_t)
allow_file_dev_w(syslogd_t,dev_console_t)
allow_file_s(syslogd_t,dev_console_t)
allow_file_dev_s(syslogd_t,dev_console_t)

#null_device_t:/dev/null:rw-s-----
allow_file_r(syslogd_t,null_device_t)
allow_file_dev_r(syslogd_t,null_device_t)
allow_file_w(syslogd_t,null_device_t)
allow_file_dev_w(syslogd_t,null_device_t)
allow_file_s(syslogd_t,null_device_t)
allow_file_dev_s(syslogd_t,null_device_t)

#dev_zero_t:/dev/zero:rw-s-----
allow_file_r(syslogd_t,dev_zero_t)
allow_file_dev_r(syslogd_t,dev_zero_t)
allow_file_w(syslogd_t,dev_zero_t)
allow_file_dev_w(syslogd_t,dev_zero_t)
allow_file_s(syslogd_t,dev_zero_t)
allow_file_dev_s(syslogd_t,dev_zero_t)

#dev_random_t:/dev/random:rw-s-----
allow_file_r(syslogd_t,dev_random_t)
allow_file_dev_r(syslogd_t,dev_random_t)
allow_file_w(syslogd_t,dev_random_t)
allow_file_dev_w(syslogd_t,dev_random_t)
allow_file_s(syslogd_t,dev_random_t)
allow_file_dev_s(syslogd_t,dev_random_t)

#dev_urandom_t:/dev/urandom:r-xs-----
allow_file_r(syslogd_t,dev_urandom_t)
allow_file_dev_r(syslogd_t,dev_urandom_t)
allow_file_x(syslogd_t,dev_urandom_t)
allow_file_dev_x(syslogd_t,dev_urandom_t)
allow_file_s(syslogd_t,dev_urandom_t)
allow_file_dev_s(syslogd_t,dev_urandom_t)

#bin_t:/bin:---s-----
allow_file_s(syslogd_t,bin_t)

#dir_bin_t:/bin:---s-----
allow_file_s(syslogd_t,dir_bin_t)

#usr_t:/usr:---s-----
allow_file_s(syslogd_t,usr_t)

#dir_usr_t:/usr:---s-----
allow_file_s(syslogd_t,dir_usr_t)

#sbin_t:/sbin:---s-----
allow_file_s(syslogd_t,sbin_t)

#dir_sbin_t:/sbin:---s-----
allow_file_s(syslogd_t,dir_sbin_t)

#usr_lib_t:/usr/lib:r-xs-----
allow_file_r(syslogd_t,usr_lib_t)
allow_file_x(syslogd_t,usr_lib_t)
allow_file_s(syslogd_t,usr_lib_t)

#dir_usr_lib_t:/usr/lib:r-xs-----
allow_file_r(syslogd_t,dir_usr_lib_t)
allow_file_x(syslogd_t,dir_usr_lib_t)
allow_file_s(syslogd_t,dir_usr_lib_t)

#lib_t:/lib:r-xs-----
allow_file_r(syslogd_t,lib_t)
allow_file_x(syslogd_t,lib_t)
allow_file_s(syslogd_t,lib_t)

#dir_lib_t:/lib:r-xs-----
allow_file_r(syslogd_t,dir_lib_t)
allow_file_x(syslogd_t,dir_lib_t)
allow_file_s(syslogd_t,dir_lib_t)
#Can access allow|allowfs exclusive label(ldconfig_cache_t)

#ldconfig_cache_t:ldconfig_cache_t:r--s-----
allow_file_r(syslogd_t,ldconfig_cache_t)
allow_file_s(syslogd_t,ldconfig_cache_t)

#usr_share_locale_t:/usr/share/locale:r--s-----
allow_file_r(syslogd_t,usr_share_locale_t)
allow_file_s(syslogd_t,usr_share_locale_t)

#dir_usr_share_locale_t:/usr/share/locale:r--s-----
allow_file_r(syslogd_t,dir_usr_share_locale_t)
allow_file_s(syslogd_t,dir_usr_share_locale_t)
#Can access allow|allowfs exclusive label(dev_log_t)

#dev_log_t:dev_log_t:rw-s-----
allow_file_r(syslogd_t,dev_log_t)
allow_file_dev_r(syslogd_t,dev_log_t)
allow_file_w(syslogd_t,dev_log_t)
allow_file_dev_w(syslogd_t,dev_log_t)
allow_file_s(syslogd_t,dev_log_t)
allow_file_dev_s(syslogd_t,dev_log_t)
#Can access allow|allowfs exclusive label(syslogd_var_run_t)

#syslogd_var_run_t:syslogd_var_run_t:rw-s-----
allow_file_r(syslogd_t,syslogd_var_run_t)
allow_file_w(syslogd_t,syslogd_var_run_t)
allow_file_s(syslogd_t,syslogd_var_run_t)

#etc_localtime_t:/etc/localtime:r--s-----
allow_file_r(syslogd_t,etc_localtime_t)
allow_file_s(syslogd_t,etc_localtime_t)

#etc_protocols_t:/etc/protocols:r--s-----
allow_file_r(syslogd_t,etc_protocols_t)
allow_file_s(syslogd_t,etc_protocols_t)

#etc_resolvdconf_t:/etc/resolv.conf:r--s-----
allow_file_r(syslogd_t,etc_resolvdconf_t)
allow_file_s(syslogd_t,etc_resolvdconf_t)

#etc_environment_t:/etc/environment:r--s-----
allow_file_r(syslogd_t,etc_environment_t)
allow_file_s(syslogd_t,etc_environment_t)

#etc_hostsdallow_t:/etc/hosts.allow:r--s-----
allow_file_r(syslogd_t,etc_hostsdallow_t)
allow_file_s(syslogd_t,etc_hostsdallow_t)

#etc_hostsddeny_t:/etc/hosts.deny:r--s-----
allow_file_r(syslogd_t,etc_hostsddeny_t)
allow_file_s(syslogd_t,etc_hostsddeny_t)
#Can access allow|allowfs exclusive label(syslogd_tmp_t)

#syslogd_tmp_t:syslogd_tmp_t:rw-s-----
allow_file_r(syslogd_t,syslogd_tmp_t)
allow_file_w(syslogd_t,syslogd_tmp_t)
allow_file_s(syslogd_t,syslogd_tmp_t)
#Can access allow|allowfs exclusive label(syslogd_var_tmp_t)

#syslogd_var_tmp_t:syslogd_var_tmp_t:rw-s-----
allow_file_r(syslogd_t,syslogd_var_tmp_t)
allow_file_w(syslogd_t,syslogd_var_tmp_t)
allow_file_s(syslogd_t,syslogd_var_tmp_t)
#Can access allow|allowfs exclusive label(syslogd_tmpfs_t)

#syslogd_tmpfs_t:syslogd_tmpfs_t:rw-s-----
allow_file_r(syslogd_t,syslogd_tmpfs_t)
allow_file_w(syslogd_t,syslogd_tmpfs_t)
allow_file_s(syslogd_t,syslogd_tmpfs_t)

#usr_share_zoneinfo_t:/usr/share/zoneinfo:r--s-----
allow_file_r(syslogd_t,usr_share_zoneinfo_t)
allow_file_s(syslogd_t,usr_share_zoneinfo_t)

#dir_usr_share_zoneinfo_t:/usr/share/zoneinfo:r--s-----
allow_file_r(syslogd_t,dir_usr_share_zoneinfo_t)
allow_file_s(syslogd_t,dir_usr_share_zoneinfo_t)

#etc_group_t:/etc/group:r--s-----
allow_file_r(syslogd_t,etc_group_t)
allow_file_s(syslogd_t,etc_group_t)

#etc_hostdconf_t:/etc/host.conf:r--s-----
allow_file_r(syslogd_t,etc_hostdconf_t)
allow_file_s(syslogd_t,etc_hostdconf_t)

#etc_hosts_t:/etc/hosts:r--s-----
allow_file_r(syslogd_t,etc_hosts_t)
allow_file_s(syslogd_t,etc_hosts_t)

#etc_nsswitchdconf_t:/etc/nsswitch.conf:r--s-----
allow_file_r(syslogd_t,etc_nsswitchdconf_t)
allow_file_s(syslogd_t,etc_nsswitchdconf_t)

#etc_passwd_t:/etc/passwd:r--s-----
allow_file_r(syslogd_t,etc_passwd_t)
allow_file_s(syslogd_t,etc_passwd_t)

#etc_services_t:/etc/services:r--s-----
allow_file_r(syslogd_t,etc_services_t)
allow_file_s(syslogd_t,etc_services_t)

#var_run_nscd_t:/var/run/nscd:r--s-----
allow_file_r(syslogd_t,var_run_nscd_t)
allow_file_s(syslogd_t,var_run_nscd_t)

#dir_var_run_nscd_t:/var/run/nscd:r--s-----
allow_file_r(syslogd_t,dir_var_run_nscd_t)
allow_file_s(syslogd_t,dir_var_run_nscd_t)

#etc_syslogdconf_t:/etc/syslog.conf:r--s-----
allow_file_r(syslogd_t,etc_syslogdconf_t)
allow_file_s(syslogd_t,etc_syslogdconf_t)

#var_log_t:/var/log:rw-s-----
allow_file_r(syslogd_t,var_log_t)
allow_file_w(syslogd_t,var_log_t)
allow_file_s(syslogd_t,var_log_t)

#dir_var_log_t:/var/log:rw-s-----
allow_file_r(syslogd_t,dir_var_log_t)
allow_file_w(syslogd_t,dir_var_log_t)
allow_file_s(syslogd_t,dir_var_log_t)

#etc_selinux_config_t:/etc/selinux/config:r--------
allow_file_r(syslogd_t,etc_selinux_config_t)

#sbin_syslogd_t:/sbin/syslogd:---s-----
allow_file_s(syslogd_t,sbin_syslogd_t)

#sbin_ldconfig_t:/sbin/ldconfig:---s-----
allow_file_s(syslogd_t,sbin_ldconfig_t)

#sbin_minilogd_t:/sbin/minilogd:---s-----
allow_file_s(syslogd_t,sbin_minilogd_t)

#bin_login_t:/bin/login:---s-----
allow_file_s(syslogd_t,bin_login_t)

#sbin_init_t:/sbin/init:---s-----
allow_file_s(syslogd_t,sbin_init_t)

#usr_share_t:/usr/share:---s-----
allow_file_s(syslogd_t,usr_share_t)

#dir_usr_share_t:/usr/share:---s-----
allow_file_s(syslogd_t,dir_usr_share_t)

####file_type_auto_trans rule
file_type_auto_trans(syslogd_t,dir_var_run_t,syslogd_var_run_t)
file_type_auto_trans(syslogd_t,tmp_t,syslogd_tmp_t)
file_type_auto_trans(syslogd_t,var_tmp_t,syslogd_var_tmp_t)
file_type_auto_trans(syslogd_t,dir_dev_t,dev_log_t)
####
##Begin of implicit dir:search
allow syslogd_t dir_rootdir_t:dir search;
allow syslogd_t dir_etc_selinux_t:dir search;
allow syslogd_t dir_etc_t:dir search;
allow syslogd_t dir_dev_t:dir search;
allow syslogd_t dir_var_t:dir search;
allow syslogd_t dir_usr_t:dir search;
allow syslogd_t dir_var_run_t:dir search;
allow syslogd_t dir_usr_share_t:dir search;
##End of implicit dir:search
allow_network_udp_client(syslogd_t,udp53_port_t)
allow_network_netif_tcp_send(syslogd_t,netif_type)
allow_network_netif_tcp_recv(syslogd_t,netif_type)
allow_network_netif_udp_send(syslogd_t,netif_type)
allow_network_netif_udp_recv(syslogd_t,netif_type)
allow_network_netif_rawip_send(syslogd_t,netif_type)
allow_network_netif_rawip_recv(syslogd_t,netif_type)
allow_network_node_tcp_send(syslogd_t,node_type)
allow_network_node_tcp_recv(syslogd_t,node_type)
allow_network_node_tcp_bind(syslogd_t,node_type)
allow_network_node_udp_send(syslogd_t,node_type)
allow_network_node_udp_recv(syslogd_t,node_type)
allow_network_node_udp_bind(syslogd_t,node_type)
allow_network_node_rawip_send(syslogd_t,node_type)
allow_network_node_rawip_recv(syslogd_t,node_type)
allow_network_node_rawip_bind(syslogd_t,node_type)

#syslogd_t and  self can communicate unix domain 

#unix read
allow_ipc_unix_r(syslogd_t,self)

#unix write
allow_ipc_unix_w(syslogd_t,self)

#sem read
allow_ipc_sem_r(syslogd_t,self)

#sem write
allow_ipc_sem_w(syslogd_t,self)

#msg read
allow_ipc_msg_r(syslogd_t,self)

#msg write
allow_ipc_msg_w(syslogd_t,self)

#msgq read
allow_ipc_msgq_r(syslogd_t,self)

#msgq write
allow_ipc_msgq_w(syslogd_t,self)

#shm read
allow_ipc_shm_r(syslogd_t,self)

#shm write
allow_ipc_shm_w(syslogd_t,self)

#pipe read
allow_ipc_pipe_r(syslogd_t,self)

#pipe write
allow_ipc_pipe_w(syslogd_t,self)

#sigchid
allow_signal_sigchld(syslogd_t,init_t)

#sigchid
allow_signal_sigchld(syslogd_t,self)

#sigkill
allow_signal_sigkill(syslogd_t,self)

#sigstop
allow_signal_sigstop(syslogd_t,self)

#signull
allow_signal_signull(syslogd_t,self)

#other signals
allow_signal_sigother(syslogd_t,self)

#syslogd_t and  syslogd_t can communicate unix domain 

#unix read
allow_ipc_unix_r(syslogd_t,syslogd_t)

#unix write
allow_ipc_unix_w(syslogd_t,syslogd_t)

##TTY configurations 
allow_tty_r(syslogd_t, { devtty_t tty_device_t })
allow_tty_w(syslogd_t, { devtty_t tty_device_t })
allow_tty_r(syslogd_t, ttyfile)
allow_tty_w(syslogd_t, ttyfile)

##PTS configurations 
allow_pts_r(syslogd_t, { devpts_t ptmx_t })
allow_pts_w(syslogd_t, { devpts_t ptmx_t })
allow_pts_r(syslogd_t, ptyfile)
allow_pts_w(syslogd_t, ptyfile)
###allows change tty/pts label
##allowfs rule
#Can access /proc/pid/self
allow_file_r(syslogd_t,self)
allow_file_s(syslogd_t,self)
#Can access proc filesystem.
allow_file_r(syslogd_t,proc_t)
allow_file_s(syslogd_t,proc_t)
#Can access usbfs filesystem.
allow_file_r(syslogd_t,usbfs_t)
allow_file_s(syslogd_t,usbfs_t)
#Can access sysfs filesystem.
allow_file_r(syslogd_t,sysfs_t)
allow_file_s(syslogd_t,sysfs_t)
##end of allowfs rule
##allowfs exclusive rule
#file type trans in tmpfs filesystem
file_type_auto_trans(syslogd_t, tmpfs_t, syslogd_tmpfs_t)
##end of allowfs exclusive rule
allow_key_v(syslogd_t,self)
allow_key_r(syslogd_t,self)
allow_key_w(syslogd_t,self)
allow_key_s(syslogd_t,self)
allow_key_l(syslogd_t,self)
allow_key_t(syslogd_t,self)
allow_key_t(syslogd_t,self)
##allowpriv rule
allow_admin_cap_setuid(syslogd_t)
allow_admin_cap_setgid(syslogd_t)
##end of allowpriv rule

##### endof syslogd_t domain


domain_auto_trans(kernel_t,sbin_init_t,init_t)
domain_auto_trans(kernel_t,etc_initdd_t,initrc_t)
domain_auto_trans(kernel_t,etc_rcdd_rc_t,initrc_t)
domain_auto_trans(kernel_t,etc_rcdd_rcdsysinit_t,initrc_t)
domain_auto_trans(kernel_t,etc_rcdd_rcdlocal_t,initrc_t)
domain_auto_trans(unconfined_t,etc_rcdd_initdd_t,initrc_t)
domain_auto_trans(unconfined_t,etc_initdd_t,initrc_t)
ifdef(`enable_mcs',`
range_transition unconfined_domain sbin_syslogd_t s0;
')
domain_auto_trans(unconfined_domain,sbin_syslogd_t,syslogd_t)
ifdef(`enable_mcs',`
range_transition unconfined_domain sbin_minilogd_t s0;
')
domain_auto_trans(unconfined_domain,sbin_minilogd_t,syslogd_t)
ifdef(`enable_mcs',`
range_transition unconfined_domain sbin_ldconfig_t s0;
')
domain_auto_trans(unconfined_domain,sbin_ldconfig_t,unconfined_ldconfig_t)
ifdef(`enable_mcs',`
')
domain_auto_trans(unconfined_domain,bin_login_t,unconfined_t)
ifdef(`enable_mcs',`
typeattribute initrc_t mcssetcats,mcsptraceall,mcskillall;
typeattribute unconfined_t mcssetcats,mcsptraceall,mcskillall;
typeattribute init_t mcssetcats,mcsptraceall,mcskillall;
typeattribute kernel_t mcssetcats,mcsptraceall,mcskillall;
range_transition domain bin_login_t  s0 - s0:c0.c1023;
')

#RBAC related configration
gen_user(system_u, , system_r, s0, s0 - s15:c0.c1023, c0.c1023)
gen_user(user_u, , system_r, s0, s0 - s15:c0.c1023, c0.c1023)
gen_user(root, , system_r, s0, s0 - s15:c0.c1023, c0.c1023)
##dummy constrain to satisfy the syntax of policy
constrain process transition
( u1 == u2 or u1 != u2 );


#start of file:./base_policy/initial_sid_contexts

# SELinux Policy Editor, a simple editor for SELinux policies
# This section of the code is from the NSA SELinux release.
# Copyright (C) 2001, 2003 National Security Agency

# These files are from the NSA SELinux code.  More verbose comments might
# be a useful addition to describe their exact relationship with SELinux
# Policy Editor.

# FLASK

#
# Define the security context for each initial SID
# sid sidname   context

sid kernel	gen_context(system_u:system_r:kernel_t,s0)
sid security	gen_context(system_u:object_r:security_t,s0)
sid unlabeled	gen_context(system_u:object_r:unlabeled_t,s0)
sid fs		gen_context(system_u:object_r:fs_t,s0)
sid file	gen_context(system_u:object_r:xattrfs_t,s0)
sid file_labels	gen_context(system_u:object_r:unlabeled_t,s0)
# init_t is still used, but an initial SID is no longer required.
sid init	gen_context(system_u:object_r:unlabeled_t,s0)
# any_socket is no longer used.
sid any_socket 	gen_context(system_u:object_r:unlabeled_t,s0)
sid port	gen_context(system_u:object_r:port_t,s0)
sid netif	gen_context(system_u:object_r:netif_t,s0)
# netmsg is no longer used.
sid netmsg	gen_context(system_u:object_r:unlabeled_t,s0)
sid node gen_context(system_u:object_r:node_t,s0 - s15:c0.c255)
# These sockets are now labeled with the kernel SID,
# and do not require their own initial SIDs.
sid igmp_packet gen_context(system_u:object_r:unlabeled_t,s0)
sid icmp_socket gen_context(system_u:object_r:unlabeled_t,s0)
sid tcp_socket  gen_context(system_u:object_r:unlabeled_t,s0)
# Most of the sysctl SIDs are now computed at runtime
# from genfs_contexts, so the corresponding initial SIDs
# are no longer required.
sid sysctl_modprobe	gen_context(system_u:object_r:unlabeled_t,s0)
# But we still need the base sysctl initial SID as a default.
sid sysctl	gen_context(system_u:object_r:unlabeled_t,s0)
sid sysctl_fs	gen_context(system_u:object_r:unlabeled_t,s0)
sid sysctl_kernel	gen_context(system_u:object_r:unlabeled_t,s0)
sid sysctl_net	gen_context(system_u:object_r:unlabeled_t,s0)
sid sysctl_net_unix	gen_context(system_u:object_r:unlabeled_t,s0)
sid sysctl_vm	gen_context(system_u:object_r:unlabeled_t,s0)
sid sysctl_dev	gen_context(system_u:object_r:unlabeled_t,s0)
sid devnull	gen_context(system_u:object_r:null_device_t,s0)
# No longer used, can be removed.
sid kmod	gen_context(system_u:object_r:unlabeled_t,s0)
sid policy	gen_context(system_u:object_r:unlabeled_t,s0)
sid scmp_packet	gen_context(system_u:object_r:unlabeled_t,s0)

# FLASK
#end of file:./base_policy/initial_sid_contexts

#start of file:./base_policy/fs_use

# SELinux Policy Editor, a simple editor for SELinux policies
# This section of the code is from the NSA SELinux release.
# Copyright (C) 2001, 2003 National Security Agency

# These files are from the NSA SELinux code.  More verbose comments might
# be a useful addition to describe their exact relationship with SELinux
# Policy Editor.

#
# Define the labeling behavior for inodes in particular filesystem types.
# This information was formerly hardcoded in the SELinux module.

# Use xattrs for the following filesystem types.
# Requires that a security xattr handler exist for the filesystem.
fs_use_xattr ext2 gen_context(system_u:object_r:fs_t,s0);
fs_use_xattr ext3 gen_context(system_u:object_r:fs_t,s0);
fs_use_xattr xfs gen_context(system_u:object_r:fs_t,s0);
fs_use_xattr jfs gen_context(system_u:object_r:fs_t,s0);
fs_use_xattr reiserfs gen_context(system_u:object_r:fs_t,s0);
fs_use_xattr jffs2 gen_context(system_u:object_r:fs_t,s0);

# Use the allocating task SID to label inodes in the following filesystem
# types, and label the filesystem itself with the specified context.
# This is appropriate for pseudo filesystems that represent objects
# like pipes and sockets, so that these objects are labeled with the same
# type as the creating task.  
fs_use_task pipefs gen_context(system_u:object_r:fs_t,s0);
fs_use_task sockfs gen_context(system_u:object_r:fs_t,s0);

# Use a transition SID based on the allocating task SID and the
# filesystem SID to label inodes in the following filesystem types,
# and label the filesystem itself with the specified context.
# This is appropriate for pseudo filesystems like devpts and tmpfs
# where we want to label objects with a derived type.
fs_use_trans devpts gen_context(system_u:object_r:devpts_t,s0);
fs_use_trans tmpfs gen_context(system_u:object_r:tmpfs_t,s0);
fs_use_trans shm gen_context(system_u:object_r:tmpfs_t,s0);
fs_use_trans mqueue  gen_context(system_u:object_r:tmpfs_t,s0);

# The separate genfs_contexts configuration can be used for filesystem 
# types that cannot support persistent label mappings or use
# one of the fixed label schemes specified here.  
#end of file:./base_policy/fs_use

#start of file:./base_policy/genfs_contexts

# SELinux Policy Editor, a simple editor for SELinux policies
# Copyright (C) 2006 Yuichi Nakamura

# proc (excluding /proc/PID)
# used in allowproc
genfscon proc /				gen_context(system_u:object_r:proc_t,s0)
genfscon proc /kmsg			gen_context(system_u:object_r:proc_kmsg_t,s0)
genfscon proc /kcore			gen_context(system_u:object_r:proc_kcore_t,s0)

# used in allowadm getsecurity
# selinuxfs
genfscon selinuxfs /			gen_context(system_u:object_r:security_t,s0)

## Following are used in allowfs 
# sysfs
genfscon sysfs /			gen_context(system_u:object_r:sysfs_t,s0)
# autofs
genfscon autofs /			gen_context(system_u:object_r:autofs_t,s0)
genfscon automount /			gen_context(system_u:object_r:autofs_t,s0)
# usbfs
genfscon usbdevfs /			gen_context(system_u:object_r:usbfs_t,s0)
genfscon usbfs / 			gen_context(system_u:object_r:usbfs_t,s0)
# cd,dvd file systems
genfscon iso9660 /			gen_context(system_u:object_r:cdfs_t,s0)
genfscon udf /				gen_context(system_u:object_r:cdfs_t,s0)
# romfs
genfscon romfs /			gen_context(system_u:object_r:romfs_t,s0)
genfscon cramfs /			gen_context(system_u:object_r:romfs_t,s0)
# ramfs
genfscon ramfs /			gen_context(system_u:object_r:ramfs_t,s0)
# File system for windows&dos
genfscon vfat /				gen_context(system_u:object_r:dosfs_t,s0)
genfscon msdos /			gen_context(system_u:object_r:dosfs_t,s0)
genfscon fat /				gen_context(system_u:object_r:dosfs_t,s0)
genfscon ntfs /				gen_context(system_u:object_r:dosfs_t,s0)
# samba
genfscon cifs /				gen_context(system_u:object_r:smbfs_t,s0)
genfscon smbfs /			gen_context(system_u:object_r:smbfs_t,s0)
# nfs
genfscon nfs /				gen_context(system_u:object_r:nfs_t,s0)
genfscon nfs4 /				gen_context(system_u:object_r:nfs_t,s0)
genfscon afs /				gen_context(system_u:object_r:nfs_t,s0)

genfscon inotifyfs /			gen_context(system_u:object_r:inotifyfs_t,s0)
genfscon hugetlbfs /			gen_context(system_u:object_r:hugetlbfs_t,s0)


# unsupported filesystems
genfscon rootfs /			gen_context(system_u:object_r:unsupported_fs_t,s0)
genfscon debugfs /			gen_context(system_u:object_r:unsupported_fs_t,s0)
genfscon eventpollfs / 			gen_context(system_u:object_r:unsupported_fs_t,s0)
genfscon futexfs / 			gen_context(system_u:object_r:unsupported_fs_t,s0)
genfscon bdev / 			gen_context(system_u:object_r:unsupported_fs_t,s0)
genfscon nfsd / 			gen_context(system_u:object_r:unsupported_fs_t,s0)
genfscon rpc_pipefs / 			gen_context(system_u:object_r:unsupported_fs_t,s0)
genfscon binfmt_misc / 			gen_context(system_u:object_r:unsupported_fs_t,s0)
#end of file:./base_policy/genfs_contexts

####net_contexts
portcon udp 53 gen_context(system_u:object_r:udp53_port_t,s0)
#Default port number
portcon tcp 1-1023 gen_context(system_u:object_r:wellknown_tcp_port_t,s0)
portcon udp 1-1023 gen_context(system_u:object_r:wellknown_udp_port_t,s0)
portcon tcp 1024-65535 gen_context(system_u:object_r:unpriv_tcp_port_t,s0)
portcon udp 1024-65535 gen_context(system_u:object_r:unpriv_udp_port_t,s0)
#Type for NIC
netifcon lo gen_context(system_u:object_r:lo_t,s0) gen_context(system_u:object_r:unlabeled_t,s0)
netifcon eth0 gen_context(system_u:object_r:eth0_t,s0) gen_context(system_u:object_r:unlabeled_t,s0)
netifcon eth1 gen_context(system_u:object_r:eth1_t,s0) gen_context(system_u:object_r:unlabeled_t,s0)
netifcon eth2 gen_context(system_u:object_r:eth2_t,s0) gen_context(system_u:object_r:unlabeled_t,s0)
#Type for node
nodecon 127.0.0.1 255.255.255.255 gen_context(system_u:object_r:node_t,s0)
nodecon 0.0.0.0 255.255.255.255 gen_context(system_u:object_r:node_t,s0)
